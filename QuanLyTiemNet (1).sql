-- Tables
-- Tạo bảng USERS
CREATE TABLE USERS (
    USER_ID  VARCHAR2(20) PRIMARY KEY,
    HOTEN    VARCHAR2(100) NOT NULL,
    QUYENHANG VARCHAR2(20) NOT NULL,
    SDT      VARCHAR2(10) NOT NULL,
    NGAYSINH DATE NOT NULL,
    EMAIL    VARCHAR2(150) UNIQUE NOT NULL,
    DIACHI   VARCHAR2(50) NOT NULL,
    CREATED_AT   DATE DEFAULT SYSDATE,
	  IS_DELETE NUMBER(1) DEFAULT 0 CHECK (IS_DELETE IN (0,1))
);

-- Tạo bảng ACCOUNT
CREATE TABLE ACCOUNT (
    ACCOUNT_ID    VARCHAR2(20) PRIMARY KEY,
    USER_ID       VARCHAR2(20) NOT NULL,
    USERNAME      VARCHAR2(50) UNIQUE NOT NULL,
    PASSWORD_HASH VARCHAR2(200) NOT NULL,
    STATUS        VARCHAR2(20) DEFAULT 'ACTIVE',
    IS_DELETE NUMBER(1) DEFAULT 0 CHECK (IS_DELETE IN (0,1)),
    CREATED_AT    DATE DEFAULT SYSDATE,
    CONSTRAINT FK_ACCOUNT_USER FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID)
);

-- Tạo bảng FUNCTION
CREATE TABLE "FUNCTION" (
    FUNCTION_ID   VARCHAR2(20) PRIMARY KEY,
    NAME_FUNCTION   VARCHAR2(50) NOT NULL,
    IS_DELETE NUMBER(1) DEFAULT 0 CHECK (IS_DELETE IN (0,1)),
    CREATED_AT    DATE DEFAULT SYSDATE
);
-- Tạo bảng ROLE
CREATE TABLE ROLE (
    ROLE_ID VARCHAR2(20) PRIMARY KEY,
    FUNCTION_ID      VARCHAR2(20) NOT NULL,
    ROLE_NAME       VARCHAR2(20) NOT NULL,
    "ADD" NUMBER(1) DEFAULT 0 CHECK ("ADD" IN (0,1)),
    EDIT NUMBER(1) DEFAULT 0 CHECK (EDIT IN (0,1)),
    "DELETE" NUMBER(1) DEFAULT 0 CHECK ("DELETE" IN (0,1)),
    DOWNLOAD NUMBER(1) DEFAULT 0 CHECK (DOWNLOAD IN (0,1)),
    "VIEW" NUMBER(1) DEFAULT 0 CHECK ("VIEW" IN (0,1)),
    IS_DELETE NUMBER(1) DEFAULT 0 CHECK (IS_DELETE IN (0,1)),
    CREATED_AT    DATE DEFAULT SYSDATE,
    CONSTRAINT FK_FUNCTION_ROLE_FUNCTION FOREIGN KEY (FUNCTION_ID) REFERENCES "FUNCTION"(FUNCTION_ID)
);

-- Tạo bảng ACCOUNT_ROLE
CREATE TABLE ACCOUNT_ROLE (
    ACCOUNT_ROLE_ID VARCHAR2(20) PRIMARY KEY,
    ACCOUNT_ID      VARCHAR2(20) NOT NULL,
    ROLE_ID       VARCHAR2(20) NOT NULL,
    IS_DELETE NUMBER(1) DEFAULT 0 CHECK (IS_DELETE IN (0,1)),
    CREATED_AT    DATE DEFAULT SYSDATE,
    CONSTRAINT FK_ACCOUNT_ROLE_ACCOUNT FOREIGN KEY (ACCOUNT_ID) REFERENCES ACCOUNT(ACCOUNT_ID),
    CONSTRAINT FK_ACCOUNT_ROLE_ROLE FOREIGN KEY (ROLE_ID) REFERENCES ROLE(ROLE_ID)
);

-- Tạo bảng ROLE_GROUP
CREATE TABLE ROLE_GROUP (
    GROUP_ID     VARCHAR2(20)  PRIMARY KEY,
    GROUP_NAME   VARCHAR2(100) UNIQUE NOT NULL,
    DESCRIPTION  VARCHAR2(255),
    IS_DELETE NUMBER(1) DEFAULT 0 CHECK (IS_DELETE IN (0,1)),
    CREATED_AT    DATE DEFAULT SYSDATE
);

-- Tạo bảng ACCOUNT_ROLE_GROUP
CREATE TABLE ACCOUNT_ROLE_GROUP (
    ACCOUNT_ROLE_GROUP_ID     NUMBER(10) PRIMARY KEY,
    ACCOUNT_ID  VARCHAR2(20) NOT NULL,
    GROUP_ID     VARCHAR2(20),
    IS_DELETE NUMBER(1) DEFAULT 0 CHECK (IS_DELETE IN (0,1)),
    CREATED_AT    DATE DEFAULT SYSDATE,
    CONSTRAINT FK_ROLE_GROUP_ACCOUNT FOREIGN KEY (ACCOUNT_ID) REFERENCES ACCOUNT(ACCOUNT_ID),
    CONSTRAINT FK_ROLE_GROUP_GROUP FOREIGN KEY (GROUP_ID) REFERENCES ROLE_GROUP(GROUP_ID)
);

-- Tạo bảng ACCOUNT_ROLE_GROUP_MAPPING
CREATE TABLE ACCOUNT_ROLE_GROUP_MAPPING (
    MAPPING_ID VARCHAR2(20) PRIMARY KEY,
    ROLE_ID    VARCHAR2(20) NOT NULL,
    GROUP_ID   VARCHAR2(20) NOT NULL,
    IS_DELETE NUMBER(1) DEFAULT 0 CHECK (IS_DELETE IN (0,1)),
    CREATED_AT    DATE DEFAULT SYSDATE,
    CONSTRAINT FK_MAPPING_ROLE FOREIGN KEY (ROLE_ID) REFERENCES ROLE(ROLE_ID),
    CONSTRAINT FK_MAPPING_GROUP FOREIGN KEY (GROUP_ID) REFERENCES ROLE_GROUP(GROUP_ID)
);

-- Tạo bảng ACCOUNT_TOKEN
CREATE TABLE ACCOUNT_TOKEN (
    TOKEN_ID      VARCHAR2(20) PRIMARY KEY,
    ACCOUNT_ID    VARCHAR2(20) NOT NULL,
    TOKEN_VALUE   VARCHAR2(500) UNIQUE NOT NULL,
    EXPIRES_AT    DATE NOT NULL,
    ISSUED_AT     DATE DEFAULT SYSDATE,
    IS_REVOKED    CHAR(1) DEFAULT 'N' CHECK (IS_REVOKED IN ('Y', 'N')),
    IS_DELETE NUMBER(1) DEFAULT 0 CHECK (IS_DELETE IN (0,1)),
    CREATED_AT    DATE DEFAULT SYSDATE,
    CONSTRAINT FK_TOKEN_ACCOUNT FOREIGN KEY (ACCOUNT_ID) REFERENCES ACCOUNT(ACCOUNT_ID)
);

-- Tạo bảng LOAI_NHAN_VIEN
CREATE TABLE LOAI_NHAN_VIEN (
    MALNV VARCHAR2(20) PRIMARY KEY,
    VITRI VARCHAR2(20) UNIQUE,
    MUCLUONG NUMBER NOT NULL,
    IS_DELETE NUMBER(1) DEFAULT 0 CHECK (IS_DELETE IN (0,1)),
    CREATED_AT    DATE DEFAULT SYSDATE
);

-- Tạo bảng NHAN_VIEN
CREATE TABLE NHAN_VIEN (
    MANV VARCHAR2(20) PRIMARY KEY,
    USER_ID      VARCHAR2(20),
    NGVL DATE NOT NULL,
    MALNV VARCHAR2(20) NOT NULL,
    MASOTHUECN VARCHAR2(13) UNIQUE,
    SOBHYT VARCHAR2(15) UNIQUE,
    IS_DELETE NUMBER(1) DEFAULT 0 CHECK (IS_DELETE IN (0,1)),
    CREATED_AT    DATE DEFAULT SYSDATE,
    FOREIGN KEY (MALNV) REFERENCES LOAI_NHAN_VIEN(MALNV),
    FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID)
);

-- Tạo bảng CA_LAM
CREATE TABLE CA_LAM (
    MACA VARCHAR2(20) PRIMARY KEY,
    MANV VARCHAR2(20),
    TGBD DATE NOT NULL,
    TGKT DATE NOT NULL,
    NGAYCC DATE NOT NULL,
    SOGIOLAM INT NOT NULL,
    THOIGIANTANGCA INT NOT NULL,
	  TRANGTHAI VARCHAR2(20) Check(TRANGTHAI in ('Working','Finish')),
    IS_DELETE NUMBER(1) DEFAULT 0 CHECK (IS_DELETE IN (0,1)),
    CREATED_AT    DATE DEFAULT SYSDATE,
    CHECK(TGKT > TGBD),
    FOREIGN KEY (MANV) REFERENCES NHAN_VIEN(MANV)
);

-- Tạo bảng NGHI_PHEP
CREATE TABLE NGHI_PHEP (
    MANP VARCHAR2(20) PRIMARY KEY,
    MANVNP VARCHAR2(20),
    MANVTHAYTHE VARCHAR2(20),
    MACA VARCHAR2(20),
    NOIDUNG VARCHAR2(50) NOT NULL,
    THOIGIANTB DATE NOT NULL,
    LOAINGHIPHEP VARCHAR2(20) NOT NULL,
    TRANGTHAINGHI VARCHAR2(20) NOT NULL,
    IS_DELETE NUMBER(1) DEFAULT 0 CHECK (IS_DELETE IN (0,1)),
    CREATED_AT    DATE DEFAULT SYSDATE,
    FOREIGN KEY (MANVNP) REFERENCES NHAN_VIEN(MANV),
    FOREIGN KEY (MANVTHAYTHE) REFERENCES NHAN_VIEN(MANV),
    FOREIGN KEY (MACA) REFERENCES CA_LAM(MACA)
);

-- Tạo bảng SO_NGAY_PHEP
CREATE TABLE SO_NGAY_PHEP (
    MANP VARCHAR2(20) PRIMARY KEY,
    MANV VARCHAR2(20),
    TONGSONGAYPHEP INT NOT NULL,
    NGAYPHEPDADUNG INT NOT NULL,
    SONGAYNGHICONLAI INT NOT NULL,
    NAM INT NOT NULL,
    IS_DELETE NUMBER(1) DEFAULT 0 CHECK (IS_DELETE IN (0,1)),
    CREATED_AT    DATE DEFAULT SYSDATE,
    FOREIGN KEY (MANV) REFERENCES NHAN_VIEN(MANV)
);

-- Tạo bảng SAN_PHAM
CREATE TABLE SAN_PHAM (
    MASP VARCHAR2(20) PRIMARY KEY,
    TENSP VARCHAR2(20) UNIQUE,
    DVT VARCHAR2(20) NOT NULL,
    LOAISP VARCHAR2(20) NOT NULL,
    SOLUONGTK INT NOT NULL,
    SODIEMTICHLUY INT NOT NULL,
    DONGIABQ NUMBER NOT NULL,
	  URL VARCHAR(255) NOT NULL,
    IS_DELETE NUMBER(1) DEFAULT 0 CHECK (IS_DELETE IN (0,1)),
    CREATED_AT    DATE DEFAULT SYSDATE
);

-- Tạo bảng NHA_CUNG_CAP
CREATE TABLE NHA_CUNG_CAP (
    MANCC VARCHAR2(20) PRIMARY KEY,
    TENNCC VARCHAR2(40) UNIQUE,
    SDT VARCHAR2(10) CHECK(LENGTH(SDT) = 10),
    EMAIL VARCHAR2(30) CHECK(EMAIL LIKE '%@gmail.com'),
    WEBSITE VARCHAR2(30),
    DIACHI VARCHAR2(50) UNIQUE,
    IS_DELETE NUMBER(1) DEFAULT 0 CHECK (IS_DELETE IN (0,1)),
    CREATED_AT    DATE DEFAULT SYSDATE
);

-- Tạo bảng NHAP_HANG
CREATE TABLE NHAP_HANG (
    MANH VARCHAR2(20) PRIMARY KEY,
    LOAINHAPHANG VARCHAR2(20) NOT NULL,
    MACHUNGTU VARCHAR2(20) UNIQUE,
    MANCC VARCHAR2(20),
    MANV VARCHAR2(20),
    TRIGIA NUMBER(10) NOT NULL,
    IS_DELETE NUMBER(1) DEFAULT 0 CHECK (IS_DELETE IN (0,1)),
    CREATED_AT    DATE DEFAULT SYSDATE,
    FOREIGN KEY (MANCC) REFERENCES NHA_CUNG_CAP(MANCC),
    FOREIGN KEY (MANV) REFERENCES NHAN_VIEN(MANV)
);

-- Tạo bảng CHI_TIET_NHAP_HANG
CREATE TABLE CHI_TIET_NHAP_HANG (
    MANH VARCHAR2(20),
    MASP VARCHAR2(20),
    SLTHEOCHUNGTU INT NOT NULL,
    SLTHUCNHAP INT NOT NULL,
    DONGIA NUMBER NOT NULL,
    CHIPHIKHAC NUMBER NOT NULL,
    CKTM NUMBER NOT NULL,
    VAT NUMBER(5,2) CHECK (VAT >= 0 AND VAT <= 100) NOT NULL,
    IS_DELETE NUMBER(1) DEFAULT 0 CHECK (IS_DELETE IN (0,1)),
    CREATED_AT    DATE DEFAULT SYSDATE,
    PRIMARY KEY (MANH, MASP),
    FOREIGN KEY (MANH) REFERENCES NHAP_HANG(MANH),
    FOREIGN KEY (MASP) REFERENCES SAN_PHAM(MASP)
);

-- Tạo bảng THIET_BI
CREATE TABLE THIET_BI (
    MATB VARCHAR2(20) PRIMARY KEY,
    TENTB VARCHAR2(20) NOT NULL,
	  LOAITB VARCHAR2(20) NOT NULL,
    TRANGTHAI VARCHAR2(20) NOT NULL,
    IS_DELETE NUMBER(1) DEFAULT 0 CHECK (IS_DELETE IN (0,1)),
    CREATED_AT    DATE DEFAULT SYSDATE
);

-- Tạo bảng CHI_TIET NHAP_TB
CREATE TABLE CHI_TIET_NHAP_TB (
    MANH VARCHAR2(20),
    MATB VARCHAR2(20),
    DONGIA NUMBER NOT NULL,
    CHIPHIKHAC NUMBER NOT NULL,
    CKTM NUMBER NOT NULL,
    VAT NUMBER(5,2) CHECK (VAT >= 0 AND VAT <= 100) NOT NULL,
    IS_DELETE NUMBER(1) DEFAULT 0 CHECK (IS_DELETE IN (0,1)),
    CREATED_AT    DATE DEFAULT SYSDATE,
    PRIMARY KEY (MANH, MATB),
	  FOREIGN KEY (MANH) REFERENCES NHAP_HANG(MANH),
	  FOREIGN KEY (MATB) REFERENCES THIET_BI(MATB)
);

--Tạo bảng LOAI_KHU_VUC
CREATE TABLE LOAI_KHU_VUC (
    MALKV VARCHAR2(20) PRIMARY KEY,
    TENLOAI VARCHAR2(20) NOT NULL,
    GIATIEN NUMBER(10) NOT NULL,
    SOLUONGMAY INT NOT NULL,
    IS_DELETE NUMBER(1) DEFAULT 0 CHECK (IS_DELETE IN (0,1)),
    CREATED_AT    DATE DEFAULT SYSDATE
);
--Tạo bảng KHU_VUC
CREATE TABLE KHU_VUC (
    MAKV VARCHAR2(20) PRIMARY KEY,
    TENKV VARCHAR2(30),
    MALKV VARCHAR2(20),
    SOTANG NUMBER,
    SOLUONGMAYKV NUMBER,
    TRANGTHAI VARCHAR2(20) NOT NULL,
    IS_DELETE NUMBER(1) DEFAULT 0 CHECK (IS_DELETE IN (0,1)),
    CREATED_AT    DATE DEFAULT SYSDATE,
    FOREIGN KEY (MALKV) REFERENCES LOAI_KHU_VUC(MALKV)
);
-- Tạo bảng CHUONG_TRINH_KHUYEN_MAI
CREATE TABLE CHUONG_TRINH_KHUYEN_MAI (
    MACTR VARCHAR2(20) PRIMARY KEY,
    TENCTR VARCHAR2(20) UNIQUE,
    LOAICTR VARCHAR2(20),
    NGBD DATE NOT NULL,
    NGKT DATE NOT NULL,
    CHIETKHAU DECIMAL NOT NULL,
    IS_DELETE NUMBER(1) DEFAULT 0 CHECK (IS_DELETE IN (0,1)),
    CREATED_AT    DATE DEFAULT SYSDATE
);

--Tạo bảng KHUYEN_MAI_SAN_PHAM
CREATE TABLE KHUYEN_MAI_SAN_PHAM (
    MAKMSP VARCHAR2(20) PRIMARY KEY,
    MACTR VARCHAR2(20),
    MASP VARCHAR2(20),
    IS_DELETE NUMBER(1) DEFAULT 0 CHECK (IS_DELETE IN (0,1)),
    CREATED_AT    DATE DEFAULT SYSDATE,
    FOREIGN KEY (MACTR) REFERENCES CHUONG_TRINH_KHUYEN_MAI(MACTR),
    FOREIGN KEY (MASP) REFERENCES SAN_PHAM(MASP)
);

--Tạo bảng KHUYEN_MAI_KHU_VUC
CREATE TABLE KHUYEN_MAI_KHU_VUC (
    MAKMKV VARCHAR2(20) PRIMARY KEY,
    MAKV VARCHAR2(20),
    MACTR VARCHAR2(20),
    IS_DELETE NUMBER(1) DEFAULT 0 CHECK (IS_DELETE IN (0,1)),
    CREATED_AT    DATE DEFAULT SYSDATE,
    FOREIGN KEY (MACTR) REFERENCES CHUONG_TRINH_KHUYEN_MAI(MACTR),
    FOREIGN KEY (MAKV) REFERENCES KHU_VUC(MAKV)
);

-- Tạo bảng CHI_PHI
CREATE TABLE CHI_PHI (
    MACHIPHI VARCHAR2(20) PRIMARY KEY,
    NOIDUNG VARCHAR2(30) NOT NULL,
    NGAYCHI DATE NOT NULL,
    MANV VARCHAR2(20),
    HINHTHUC VARCHAR2(20) NOT NULL,
    SOTIEN NUMBER NOT NULL,
    TRANGTHAI VARCHAR2(20),
    IS_DELETE NUMBER(1) DEFAULT 0 CHECK (IS_DELETE IN (0,1)),
    CREATED_AT    DATE DEFAULT SYSDATE,
    FOREIGN KEY (MANV) REFERENCES NHAN_VIEN(MANV)
);

--Tạo bảng HANG_KHACH_HANG
CREATE TABLE HANG_KHACH_HANG (
    MAHKH VARCHAR2(20) PRIMARY KEY,
    TENHANG VARCHAR2(20) NOT NULL,
    TYLENAP DECIMAL NOT NULL,
    IS_DELETE NUMBER(1) DEFAULT 0 CHECK (IS_DELETE IN (0,1)),
    CREATED_AT    DATE DEFAULT SYSDATE
);

-- Tạo bảng KHACH_HANG	
CREATE TABLE KHACH_HANG (
    MAKH VARCHAR2(20) PRIMARY KEY,
    USER_ID       VARCHAR2(20),
    MAHKH VARCHAR2(20),
    SODUTK NUMBER(10) NOT NULL,
    SODIEMTICHLUY INT NOT NULL,
    TRANGTHAI VARCHAR2(20) NOT NULL,
    NGAYDKTK DATE DEFAULT SYSDATE,
    IS_DELETE NUMBER(1) DEFAULT 0 CHECK (IS_DELETE IN (0,1)),
    FOREIGN KEY (MAHKH) REFERENCES HANG_KHACH_HANG(MAHKH),
    FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID)
); 

-- Tạo bảng PC
CREATE TABLE PC (
    MAPC VARCHAR2(20) PRIMARY KEY,
    RAM VARCHAR2(20) NOT NULL,
    ROM VARCHAR2(20) NOT NULL,
    CPU VARCHAR2(20) NOT NULL,
    VGA VARCHAR2(20) NOT NULL,
    SOMAY INT CHECK (SOMAY > 0) NOT NULL,
    TRANGTHAI VARCHAR2(20) NOT NULL,
    MAKV VARCHAR2(20),
    IS_DELETE NUMBER(1) DEFAULT 0 CHECK (IS_DELETE IN (0,1)),
    CREATED_AT    DATE DEFAULT SYSDATE,
    FOREIGN KEY (MAKV) REFERENCES KHU_VUC(MAKV)
);

-- Tạo bảng LICH_SU_CHOI
CREATE TABLE LICH_SU_CHOI (
    MALS VARCHAR2(20) PRIMARY KEY,
    MAKH VARCHAR2(20),
    NGAYBD DATE NOT NULL,
    NGAYKT DATE NOT NULL,
    TRANGTHAI VARCHAR2(20),
    IS_DELETE NUMBER(1) DEFAULT 0 CHECK (IS_DELETE IN (0,1)),
    CREATED_AT    DATE DEFAULT SYSDATE,
    CHECK (NGAYKT > NGAYBD),
    FOREIGN KEY (MAKH) REFERENCES KHACH_HANG(MAKH)
);

-- Tạo bảng THUE_MAY
CREATE TABLE THUE_MAY (
    MATM VARCHAR2(20) PRIMARY KEY,
    MAPC VARCHAR2(20),
    MALS VARCHAR2(20),
    IS_DELETE NUMBER(1) DEFAULT 0 CHECK (IS_DELETE IN (0,1)),
    CREATED_AT    DATE DEFAULT SYSDATE,
    FOREIGN KEY (MAPC) REFERENCES PC(MAPC),
    FOREIGN KEY (MALS) REFERENCES LICH_SU_CHOI(MALS)
);

-- Tạo bảng GIAO_DICH
CREATE TABLE GIAO_DICH (
    MAGD VARCHAR2(20) PRIMARY KEY,
    MAKH VARCHAR2(20),
    HINHTHUC VARCHAR2(20) NOT NULL,
    SOTIEN NUMBER(10) NOT NULL,
    TRANGTHAI VARCHAR2(20),
    IS_DELETE NUMBER(1) DEFAULT 0 CHECK (IS_DELETE IN (0,1)),
    CREATED_AT    DATE DEFAULT SYSDATE,
    FOREIGN KEY (MAKH) REFERENCES KHACH_HANG(MAKH)
);

-- Tạo bảng PHIEU_THANH_TOAN
CREATE TABLE PHIEU_THANH_TOAN (
    MAPHIEU VARCHAR2(20) PRIMARY KEY,
    MAKH VARCHAR2(20),
    TONGSODV INT NOT NULL,
    TRANGTHAI VARCHAR2(20) NOT NULL,
    MALS VARCHAR2(20),
    TONGTIEN NUMBER NOT NULL,
    TONGTHOIGIANCHOI INT,
    TONGTIENDV NUMBER(10),
    IS_DELETE NUMBER(1) DEFAULT 0 CHECK (IS_DELETE IN (0,1)),
    CREATED_AT    DATE DEFAULT SYSDATE,
    FOREIGN KEY (MAKH) REFERENCES KHACH_HANG(MAKH),
    FOREIGN KEY (MALS) REFERENCES LICH_SU_CHOI(MALS)
);

-- Tạo bảng DICH_VU_DA_DUNG
CREATE TABLE DICH_VU_DA_DUNG (
    MADVSD VARCHAR2(20) PRIMARY KEY,
    MALS VARCHAR2(20),
    MASP VARCHAR2(20),
    SL INT NOT NULL,
    TRANGTHAI VARCHAR2(20) DEFAULT 'SERVICED',
    IS_DELETE NUMBER(1) DEFAULT 0 CHECK (IS_DELETE IN (0,1)),
    CREATED_AT    DATE DEFAULT SYSDATE,
    FOREIGN KEY (MALS) REFERENCES LICH_SU_CHOI(MALS),
    FOREIGN KEY (MASP) REFERENCES SAN_PHAM(MASP)
);


-- Tạo bảng THIET_BI_TUNG_MAY
CREATE TABLE THIET_BI_TUNG_MAY (
    MAPC VARCHAR2(20),
    MATB VARCHAR2(20),
    IS_DELETE NUMBER(1) DEFAULT 0 CHECK (IS_DELETE IN (0,1)),
    CREATED_AT    DATE DEFAULT SYSDATE,
    PRIMARY KEY (MAPC, MATB),
    FOREIGN KEY (MAPC) REFERENCES PC(MAPC),
    FOREIGN KEY (MATB) REFERENCES THIET_BI(MATB)
);

-- Tạo bảng THAY_THE_THIET_BI
CREATE TABLE THAY_THE_THIET_BI (
    MATTTB VARCHAR2(20) PRIMARY KEY,
    MATB VARCHAR2(20),
	  MATBTHAYTHE VARCHAR2(20),
    MANV VARCHAR2(20),
	  TRANGTHAI VARCHAR2(20),
    IS_DELETE NUMBER(1) DEFAULT 0 CHECK (IS_DELETE IN (0,1)),
    CREATED_AT    DATE DEFAULT SYSDATE,
    FOREIGN KEY (MATB) REFERENCES THIET_BI(MATB),
	  FOREIGN KEY (MATBTHAYTHE) REFERENCES THIET_BI(MATB)
);

-- Tạo bảng QUA_TANG
CREATE TABLE QUA_TANG (
    MAQT VARCHAR2(20) PRIMARY KEY,
    NOIDUNG VARCHAR2(20) NOT NULL,
    SODIEMTIEUHAO INT NOT NULL,
    IS_DELETE NUMBER(1) DEFAULT 0 CHECK (IS_DELETE IN (0,1)),
    CREATED_AT    DATE DEFAULT SYSDATE
);

-- Tạo bảng LICH_SU_DOI_QUA
CREATE TABLE LICH_SU_DOI_QUA (
    MADQ VARCHAR2(20) PRIMARY KEY,
    MAKH VARCHAR2(20) NOT NULL,
    MAQT VARCHAR2(20) NOT NULL,
    SL INT,
    TRANGTHAI VARCHAR2(20),
    IS_DELETE NUMBER(1) DEFAULT 0 CHECK (IS_DELETE IN (0,1)),
    CREATED_AT    DATE DEFAULT SYSDATE,
    FOREIGN KEY (MAKH) REFERENCES KHACH_HANG(MAKH),
    FOREIGN KEY (MAQT) REFERENCES QUA_TANG(MAQT)
);

-- Tạo bảng SU_KIEN
CREATE TABLE SU_KIEN (
    MASK VARCHAR2(20) PRIMARY KEY,
    TENSK VARCHAR2(20) NOT NULL,
    TGBD DATE NOT NULL,
    TGKT DATE NOT NULL,
    MAKV VARCHAR2(20),
    NOIDUNG VARCHAR2(20) NOT NULL,
    MANV VARCHAR2(20),
    IS_DELETE NUMBER(1) DEFAULT 0 CHECK (IS_DELETE IN (0,1)),
    CREATED_AT    DATE DEFAULT SYSDATE,
    FOREIGN KEY (MAKV) REFERENCES KHU_VUC(MAKV),
    FOREIGN KEY (MANV) REFERENCES NHAN_VIEN(MANV)
);

--Tạo bảng DOANH_THU
CREATE TABLE DOANH_THU (
    MADT VARCHAR2(20) PRIMARY KEY,
    NOIDUNG VARCHAR2(255),
    TONGDOANHTHU NUMBER(10),
    LOAIDT             VARCHAR2(20),
    TONGDOANHTHUDV     NUMBER(10),
    TONGTHOIGIANCHOI   INT,
    TONGSODV           INT,
    IS_DELETE NUMBER(1) DEFAULT 0 CHECK (IS_DELETE IN (0,1)),
    CREATED_AT    DATE DEFAULT SYSDATE
);

-- Dữ liệu mẫu
-- USERS
INSERT ALL
    INTO USERS (USER_ID, HOTEN, SDT, CREATED_AT, EMAIL, NGAYSINH, DIACHI, IS_DELETE, QUYENHANG)
    VALUES ('U001', 'Nguyen Van A', '0911111111', SYSDATE, 'a@gmail.com', TO_DATE('1995-01-01', 'YYYY-MM-DD'), 'Hà Nội', 0, 'Admin')
    INTO USERS (USER_ID, HOTEN, SDT, CREATED_AT, EMAIL, NGAYSINH, DIACHI, IS_DELETE, QUYENHANG)
    VALUES ('U002', 'Le Thi B', '0922222222', SYSDATE, 'b@gmail.com', TO_DATE('1996-02-02', 'YYYY-MM-DD'), 'HCM', 0, 'Employee')
    INTO USERS (USER_ID, HOTEN, SDT, CREATED_AT, EMAIL, NGAYSINH, DIACHI, IS_DELETE, QUYENHANG)
    VALUES ('U003', 'Tran Van C', '0933333333', SYSDATE, 'c@gmail.com', TO_DATE('1997-03-03', 'YYYY-MM-DD'), 'Đà Nẵng', 0, 'Employee')
    INTO USERS (USER_ID, HOTEN, SDT, CREATED_AT, EMAIL, NGAYSINH, DIACHI, IS_DELETE, QUYENHANG)
    VALUES ('U004', 'Pham Thi D', '0944444444', SYSDATE, 'd@gmail.com', TO_DATE('1998-04-04', 'YYYY-MM-DD'), 'Cần Thơ', 0, 'Employee')
    INTO USERS (USER_ID, HOTEN, SDT, CREATED_AT, EMAIL, NGAYSINH, DIACHI, IS_DELETE, QUYENHANG)
    VALUES ('U005', 'Doan Thanh E', '0955555555', SYSDATE, 'e@gmail.com', TO_DATE('1998-04-03', 'YYYY-MM-DD'), 'Kiên Giang', 0, 'Employee')
    INTO USERS (USER_ID, HOTEN, SDT, CREATED_AT, EMAIL, NGAYSINH, DIACHI, IS_DELETE, QUYENHANG)
    VALUES ('U006', 'Ngo Xuan F', '0966666666', SYSDATE, 'f@gmail.com', TO_DATE('1997-02-03', 'YYYY-MM-DD'), 'Phú thọ', 0, 'Customer')
SELECT * FROM dual;

-- ACCOUNT
INSERT ALL
    INTO ACCOUNT (ACCOUNT_ID, USER_ID, USERNAME, PASSWORD_HASH, STATUS, IS_DELETE, CREATED_AT)
    VALUES ('AC001', 'U001', 'nv1', 'bcdc5773214eb32e6850a91a76b6ec6233f955b3e1efc3af0efc8903e1a9fe4b', 'ACTIVE', 0, SYSDATE)
    INTO ACCOUNT (ACCOUNT_ID, USER_ID, USERNAME, PASSWORD_HASH, STATUS, IS_DELETE, CREATED_AT)
    VALUES ('AC002', 'U002', 'nv2', '4b4a2343f93add9ff848a09647b275f955a64575e200d5b743d2a30a29480e06', 'ACTIVE', 0, SYSDATE)
    INTO ACCOUNT (ACCOUNT_ID, USER_ID, USERNAME, PASSWORD_HASH, STATUS, IS_DELETE, CREATED_AT)
    VALUES ('AC003', 'U003', 'nv3', '792fb2048572b994783cda6c942f9fbd7b04783f958679a957128866b04079bb', 'ACTIVE', 0, SYSDATE)
    INTO ACCOUNT (ACCOUNT_ID, USER_ID, USERNAME, PASSWORD_HASH, STATUS, IS_DELETE, CREATED_AT)
    VALUES ('AC004', 'U004', 'nv4', 'db19226c66b9428463aaaae200bb0b997cbd38469f08b3cac5b539390b5d222a', 'ACTIVE', 0, SYSDATE)
    INTO ACCOUNT (ACCOUNT_ID, USER_ID, USERNAME, PASSWORD_HASH, STATUS, IS_DELETE, CREATED_AT)
    VALUES ('AC005', 'U005', 'nv5', '7cf60d1b2946dc4b8d92b0f193a50dc104aa549c4fc358802197d99986ecdd9b', 'ACTIVE', 0, SYSDATE)
    INTO ACCOUNT (ACCOUNT_ID, USER_ID, USERNAME, PASSWORD_HASH, STATUS, IS_DELETE, CREATED_AT)
    VALUES ('AC006', 'U006', 'cs', 'e379ade4e7e46f6dc08303ca16914548eae7f5f25ca53c7a3a9ff3cad8f75813', 'ACTIVE', 0, SYSDATE)
SELECT * FROM dual;

-- FUNCTION
INSERT ALL
    INTO "FUNCTION" (FUNCTION_ID, NAME_FUNCTION)
    VALUES ('F001', 'Quản lý khách hàng')
    INTO "FUNCTION" (FUNCTION_ID, NAME_FUNCTION)
    VALUES ('F002', 'Quản lý nhân viên')
    INTO "FUNCTION" (FUNCTION_ID, NAME_FUNCTION)
    VALUES ('F003', 'Quản lý dịch vụ')
    INTO "FUNCTION" (FUNCTION_ID, NAME_FUNCTION)
    VALUES ('F004', 'Báo cáo doanh thu')
SELECT * FROM dual;


-- ROLE
INSERT ALL
    INTO ROLE (ROLE_ID, FUNCTION_ID, ROLE_NAME, "ADD", EDIT, "DELETE", DOWNLOAD, "VIEW")
    VALUES ('R001', 'F001', 'CustomerRole', 0, 0, 0, 0, 1)
    INTO ROLE (ROLE_ID, FUNCTION_ID, ROLE_NAME, "ADD", EDIT, "DELETE", DOWNLOAD, "VIEW")
    VALUES ('R002', 'F002', 'EmployeeRole', 1, 1, 0, 0, 1)
    INTO ROLE (ROLE_ID, FUNCTION_ID, ROLE_NAME, "ADD", EDIT, "DELETE", DOWNLOAD, "VIEW")
    VALUES ('R003', 'F003', 'ServiceManager', 1, 1, 1, 1, 1)
    INTO ROLE (ROLE_ID, FUNCTION_ID, ROLE_NAME, "ADD", EDIT, "DELETE", DOWNLOAD, "VIEW")
    VALUES ('R004', 'F004', 'AdminRole', 1, 1, 1, 1, 1)
SELECT * FROM dual;


-- ACCOUNT_ROLE
INSERT ALL
    INTO ACCOUNT_ROLE (ACCOUNT_ROLE_ID, ACCOUNT_ID, ROLE_ID)
    VALUES ('AR001', 'AC001', 'R001')
    INTO ACCOUNT_ROLE (ACCOUNT_ROLE_ID, ACCOUNT_ID, ROLE_ID)
    VALUES ('AR002', 'AC002', 'R001')
    INTO ACCOUNT_ROLE (ACCOUNT_ROLE_ID, ACCOUNT_ID, ROLE_ID)
    VALUES ('AR003', 'AC003', 'R002')
    INTO ACCOUNT_ROLE (ACCOUNT_ROLE_ID, ACCOUNT_ID, ROLE_ID)
    VALUES ('AR004', 'AC004', 'R004')
SELECT * FROM dual;


-- ROLE_GROUP
INSERT ALL
    INTO ROLE_GROUP (GROUP_ID, GROUP_NAME, DESCRIPTION)
    VALUES ('G001', 'NHOM_ADMIN', 'Toàn quyền hệ thống')
    INTO ROLE_GROUP (GROUP_ID, GROUP_NAME, DESCRIPTION)
    VALUES ('G002', 'NHOM_RECEPTION', 'Quyền lễ tân')
    INTO ROLE_GROUP (GROUP_ID, GROUP_NAME, DESCRIPTION)
    VALUES ('G003', 'NHOM_TECHINICAL', 'Quyền kỹ thuật')
    INTO ROLE_GROUP (GROUP_ID, GROUP_NAME, DESCRIPTION)
    VALUES ('G004', 'NHOM_SERVICE', 'Quyền phục vụ')
    INTO ROLE_GROUP (GROUP_ID, GROUP_NAME, DESCRIPTION)
    VALUES ('G005', 'NHOM_SECURITY', 'Quyền an ninh')
    INTO ROLE_GROUP (GROUP_ID, GROUP_NAME, DESCRIPTION)
    VALUES ('G006', 'NHOM_CUSTOMER', 'Quyền khách hàng')
SELECT * FROM dual;


-- ACCOUNT_ROLE_GROUP
INSERT ALL
    INTO ACCOUNT_ROLE_GROUP (ACCOUNT_ROLE_GROUP_ID, ACCOUNT_ID, GROUP_ID)
    VALUES (1, 'AC001', 'G001')
    INTO ACCOUNT_ROLE_GROUP (ACCOUNT_ROLE_GROUP_ID, ACCOUNT_ID, GROUP_ID)
    VALUES (2, 'AC002', 'G002')
    INTO ACCOUNT_ROLE_GROUP (ACCOUNT_ROLE_GROUP_ID, ACCOUNT_ID, GROUP_ID)
    VALUES (3, 'AC003', 'G003')
    INTO ACCOUNT_ROLE_GROUP (ACCOUNT_ROLE_GROUP_ID, ACCOUNT_ID, GROUP_ID)
    VALUES (4, 'AC004', 'G004')
    INTO ACCOUNT_ROLE_GROUP (ACCOUNT_ROLE_GROUP_ID, ACCOUNT_ID, GROUP_ID)
    VALUES (5, 'AC005', 'G005')
    INTO ACCOUNT_ROLE_GROUP (ACCOUNT_ROLE_GROUP_ID, ACCOUNT_ID, GROUP_ID)
    VALUES (6, 'AC006', 'G006')

SELECT * FROM dual;


-- ACCOUNT_ROLE_GROUP_MAPPING
INSERT ALL
    INTO ACCOUNT_ROLE_GROUP_MAPPING (MAPPING_ID, ROLE_ID, GROUP_ID)
    VALUES ('MAP01', 'R001', 'G001')
    INTO ACCOUNT_ROLE_GROUP_MAPPING (MAPPING_ID, ROLE_ID, GROUP_ID)
    VALUES ('MAP02', 'R002', 'G002')
    INTO ACCOUNT_ROLE_GROUP_MAPPING (MAPPING_ID, ROLE_ID, GROUP_ID)
    VALUES ('MAP03', 'R004', 'G003')
SELECT * FROM dual;


-- ACCOUNT_TOKEN
INSERT ALL
    INTO ACCOUNT_TOKEN (TOKEN_ID, ACCOUNT_ID, TOKEN_VALUE, EXPIRES_AT)
    VALUES ('T001', 'AC001', 'token_001', SYSDATE + 30)
    INTO ACCOUNT_TOKEN (TOKEN_ID, ACCOUNT_ID, TOKEN_VALUE, EXPIRES_AT)
    VALUES ('T002', 'AC002', 'token_002', SYSDATE + 30)
    INTO ACCOUNT_TOKEN (TOKEN_ID, ACCOUNT_ID, TOKEN_VALUE, EXPIRES_AT)
    VALUES ('T003', 'AC003', 'token_003', SYSDATE + 30)
    INTO ACCOUNT_TOKEN (TOKEN_ID, ACCOUNT_ID, TOKEN_VALUE, EXPIRES_AT)
    VALUES ('T004', 'AC004', 'token_004', SYSDATE + 30)
SELECT * FROM dual;

--LOAI_NHAN_VIEN
INSERT ALL
    INTO LOAI_NHAN_VIEN (MALNV, VITRI, MUCLUONG) VALUES ('LNV01', 'Quản lý', 7000000)
    INTO LOAI_NHAN_VIEN (MALNV, VITRI, MUCLUONG) VALUES ('LNV02', 'Lễ tân', 9000000)
    INTO LOAI_NHAN_VIEN (MALNV, VITRI, MUCLUONG) VALUES ('LNV03', 'Kỹ thuật', 12000000)
    INTO LOAI_NHAN_VIEN (MALNV, VITRI, MUCLUONG) VALUES ('LNV04', 'Phục vụ', 6500000)
    INTO LOAI_NHAN_VIEN (MALNV, VITRI, MUCLUONG) VALUES ('LNV05', 'An Ninh', 12000000)
SELECT * FROM dual;

-- Nhân viên
INSERT ALL
    INTO NHAN_VIEN (MANV, USER_ID, NGVL, MALNV, MASOTHUECN, SOBHYT) 
    VALUES ('NV001', 'U001', TO_DATE('2023-01-15', 'YYYY-MM-DD'), 'LNV01', '1234567890001', 'BHYT001')
    INTO NHAN_VIEN (MANV, USER_ID, NGVL, MALNV, MASOTHUECN, SOBHYT) 
    VALUES ('NV002', 'U002', TO_DATE('2022-06-01', 'YYYY-MM-DD'), 'LNV02', '1234567890002', 'BHYT002')
    INTO NHAN_VIEN (MANV, USER_ID, NGVL, MALNV, MASOTHUECN, SOBHYT) 
    VALUES ('NV003', 'U003', TO_DATE('2021-03-20', 'YYYY-MM-DD'), 'LNV03', '1234567890003', 'BHYT003')
    INTO NHAN_VIEN (MANV, USER_ID, NGVL, MALNV, MASOTHUECN, SOBHYT) 
    VALUES ('NV004', 'U004', TO_DATE('2020-11-10', 'YYYY-MM-DD'), 'LNV04', '1234567890004', 'BHYT004')
    INTO NHAN_VIEN (MANV, USER_ID, NGVL, MALNV, MASOTHUECN, SOBHYT) 
    VALUES ('NV005', 'U005', TO_DATE('2020-11-10', 'YYYY-MM-DD'), 'LNV05', '1234567890005', 'BHYT005')
SELECT * FROM dual;

--CA_LAM
INSERT ALL
    INTO CA_LAM (MACA, MANV, TGBD, TGKT, NGAYCC, SOGIOLAM, THOIGIANTANGCA, TRANGTHAI)
    VALUES ('CL001', 'NV001', TO_DATE('2025-05-15 08:00', 'YYYY-MM-DD HH24:MI'), TO_DATE('2025-05-15 16:00', 'YYYY-MM-DD HH24:MI'), TO_DATE('2025-05-15', 'YYYY-MM-DD'), 8, 0, 'Finish')
    INTO CA_LAM (MACA, MANV, TGBD, TGKT, NGAYCC, SOGIOLAM, THOIGIANTANGCA, TRANGTHAI)
    VALUES ('CL002', 'NV002', TO_DATE('2025-05-15 16:00', 'YYYY-MM-DD HH24:MI'), TO_DATE('2025-05-15 23:00', 'YYYY-MM-DD HH24:MI'), TO_DATE('2025-05-15', 'YYYY-MM-DD'), 7, 0, 'Finish')
    INTO CA_LAM (MACA, MANV, TGBD, TGKT, NGAYCC, SOGIOLAM, THOIGIANTANGCA, TRANGTHAI)
    VALUES ('CL003', 'NV003', TO_DATE('2025-05-16 08:00', 'YYYY-MM-DD HH24:MI'), TO_DATE('2025-05-16 17:00', 'YYYY-MM-DD HH24:MI'), TO_DATE('2025-05-16', 'YYYY-MM-DD'), 8, 1, 'Working')
    INTO CA_LAM (MACA, MANV, TGBD, TGKT, NGAYCC, SOGIOLAM, THOIGIANTANGCA, TRANGTHAI)
    VALUES ('CL004', 'NV004', TO_DATE('2025-05-16 09:00', 'YYYY-MM-DD HH24:MI'), TO_DATE('2025-05-16 18:00', 'YYYY-MM-DD HH24:MI'), TO_DATE('2025-05-16', 'YYYY-MM-DD'), 8, 1, 'Working')
SELECT * FROM dual;

--NGHI_PHEP
INSERT ALL
    INTO NGHI_PHEP (MANP, MANVNP, MANVTHAYTHE, MACA, NOIDUNG, THOIGIANTB, LOAINGHIPHEP, TRANGTHAINGHI)
    VALUES ('NP001', 'NV001', 'NV002', 'CL001', 'Nghỉ ốm', TO_DATE('2025-05-15', 'YYYY-MM-DD'), 'SICK', 'APPROVED')
    INTO NGHI_PHEP (MANP, MANVNP, MANVTHAYTHE, MACA, NOIDUNG, THOIGIANTB, LOAINGHIPHEP, TRANGTHAINGHI)
    VALUES ('NP002', 'NV002', 'NV003', 'CL002', 'Nghỉ phép năm', TO_DATE('2025-05-15', 'YYYY-MM-DD'), 'ANNUAL', 'APPROVED')
    INTO NGHI_PHEP (MANP, MANVNP, MANVTHAYTHE, MACA, NOIDUNG, THOIGIANTB, LOAINGHIPHEP, TRANGTHAINGHI)
    VALUES ('NP003', 'NV003', 'NV004', 'CL003', 'Nghỉ việc riêng', TO_DATE('2025-05-16', 'YYYY-MM-DD'), 'PERSONAL', 'PENDING')
    INTO NGHI_PHEP (MANP, MANVNP, MANVTHAYTHE, MACA, NOIDUNG, THOIGIANTB, LOAINGHIPHEP, TRANGTHAINGHI)
    VALUES ('NP004', 'NV004', 'NV001', 'CL004', 'Nghỉ thai sản', TO_DATE('2025-05-16', 'YYYY-MM-DD'), 'MATERNITY', 'APPROVED')
SELECT * FROM dual;

-- SO_NGAY_PHEP
INSERT ALL
    INTO SO_NGAY_PHEP (MANP, MANV, TONGSONGAYPHEP, NGAYPHEPDADUNG, SONGAYNGHICONLAI, NAM)
    VALUES ('SNP001', 'NV001', 12, 3, 9, 2025)
    INTO SO_NGAY_PHEP (MANP, MANV, TONGSONGAYPHEP, NGAYPHEPDADUNG, SONGAYNGHICONLAI, NAM)
    VALUES ('SNP002', 'NV002', 12, 4, 8, 2025)
    INTO SO_NGAY_PHEP (MANP, MANV, TONGSONGAYPHEP, NGAYPHEPDADUNG, SONGAYNGHICONLAI, NAM)
    VALUES ('SNP003', 'NV003', 12, 2, 10, 2025)
    INTO SO_NGAY_PHEP (MANP, MANV, TONGSONGAYPHEP, NGAYPHEPDADUNG, SONGAYNGHICONLAI, NAM)
    VALUES ('SNP004', 'NV004', 12, 5, 7, 2025)
SELECT * FROM dual;

--SAN_PHAM 
INSERT ALL
    INTO SAN_PHAM (MASP, TENSP, DVT, LOAISP, SOLUONGTK, SODIEMTICHLUY, DONGIABQ, URL)
    VALUES ('SP001', 'Coca Cola', 'Lon', 'Nuoc Uong', 100, 10, 10000, '/com/raven/images/coca.jpg')
    INTO SAN_PHAM (MASP, TENSP, DVT, LOAISP, SOLUONGTK, SODIEMTICHLUY, DONGIABQ, URL)
    VALUES ('SP002', 'Pepsi', 'Lon', 'Nuoc Uong', 80, 10, 10000, '/com/raven/images/pepsi.jpg')
    INTO SAN_PHAM (MASP, TENSP, DVT, LOAISP, SOLUONGTK, SODIEMTICHLUY, DONGIABQ, URL)
    VALUES ('SP003', 'Snack', 'Goi', 'Do An Nhanh', 50, 5, 15000, '/com/raven/images/Snack.jpg')
    INTO SAN_PHAM (MASP, TENSP, DVT, LOAISP, SOLUONGTK, SODIEMTICHLUY, DONGIABQ, URL)
    VALUES ('SP004', 'Tra Xanh', 'Chai', 'Nuoc Uong', 70, 8, 12000, '/com/raven/images/kodo.jpg')
SELECT * FROM dual;

--NHA_CUNG_CAP
INSERT ALL
    INTO NHA_CUNG_CAP (MANCC, TENNCC, SDT, EMAIL, WEBSITE, DIACHI)
    VALUES ('NCC001', 'Coca Cola VN', '0909123456', 'cocacola@gmail.com', 'www.cocacola.vn', 'Ha Noi')
    INTO NHA_CUNG_CAP (MANCC, TENNCC, SDT, EMAIL, WEBSITE, DIACHI)
    VALUES ('NCC002', 'Pepsi VN', '0988123456', 'pepsivn@gmail.com', 'www.pepsivn.com', 'HCM')
    INTO NHA_CUNG_CAP (MANCC, TENNCC, SDT, EMAIL, WEBSITE, DIACHI)
    VALUES ('NCC003', 'Oishi', '0911234567', 'oishi@gmail.com', 'www.oishi.vn', 'Da Nang')
    INTO NHA_CUNG_CAP (MANCC, TENNCC, SDT, EMAIL, WEBSITE, DIACHI)
    VALUES ('NCC004', 'Tan Hiep Phat', '0922345678', 'thp@gmail.com', 'www.thp.vn', 'Binh Duong')
SELECT * FROM dual;

--NHAP_HANG
INSERT ALL
    INTO NHAP_HANG (MANH, LOAINHAPHANG, MACHUNGTU, MANCC, MANV, TRIGIA)
    VALUES ('NH001', 'Hang moi', 'CT001', 'NCC001', 'NV001', 1000000)
    INTO NHAP_HANG (MANH, LOAINHAPHANG, MACHUNGTU, MANCC, MANV, TRIGIA)
    VALUES ('NH002', 'Bo sung', 'CT002', 'NCC002', 'NV002', 800000)
    INTO NHAP_HANG (MANH, LOAINHAPHANG, MACHUNGTU, MANCC, MANV, TRIGIA)
    VALUES ('NH003', 'Hang moi', 'CT003', 'NCC003', 'NV003', 1200000)
    INTO NHAP_HANG (MANH, LOAINHAPHANG, MACHUNGTU, MANCC, MANV, TRIGIA)
    VALUES ('NH004', 'Bo sung', 'CT004', 'NCC004', 'NV004', 900000)
SELECT * FROM dual;

--CHI_TIET_NHAP_HANG
INSERT ALL
    INTO CHI_TIET_NHAP_HANG (MANH, MASP, SLTHEOCHUNGTU, SLTHUCNHAP, DONGIA, CHIPHIKHAC, CKTM, VAT)
    VALUES ('NH001', 'SP001', 50, 50, 10000, 0, 0, 10)
    INTO CHI_TIET_NHAP_HANG (MANH, MASP, SLTHEOCHUNGTU, SLTHUCNHAP, DONGIA, CHIPHIKHAC, CKTM, VAT)
    VALUES ('NH002', 'SP002', 40, 38, 10000, 50000, 2, 10)
    INTO CHI_TIET_NHAP_HANG (MANH, MASP, SLTHEOCHUNGTU, SLTHUCNHAP, DONGIA, CHIPHIKHAC, CKTM, VAT)
    VALUES ('NH003', 'SP003', 30, 30, 15000, 0, 0, 10)
    INTO CHI_TIET_NHAP_HANG (MANH, MASP, SLTHEOCHUNGTU, SLTHUCNHAP, DONGIA, CHIPHIKHAC, CKTM, VAT)
    VALUES ('NH004', 'SP004', 60, 60, 12000, 0, 1, 10)
SELECT * FROM dual;

--THIET_BI
INSERT ALL
    INTO THIET_BI (MATB, TENTB, LOAITB, TRANGTHAI)
    VALUES ('TB001', 'Man hinh AOC', 'Man hinh', 'HOATDONG')
    INTO THIET_BI (MATB, TENTB, LOAITB, TRANGTHAI)
    VALUES ('TB002', 'Tai nghe Razer', 'Tai nghe', 'HOATDONG')
    INTO THIET_BI (MATB, TENTB, LOAITB, TRANGTHAI)
    VALUES ('TB003', 'Chuột Logitech', 'Chuột', 'HOATDONG')
    INTO THIET_BI (MATB, TENTB, LOAITB, TRANGTHAI)
    VALUES ('TB004', 'Bàn phím Cơ', 'Ban phim', 'HOATDONG')
SELECT * FROM dual;

--CHI_TIET_NHAP_TB
INSERT ALL
    INTO CHI_TIET_NHAP_TB (MANH, MATB, DONGIA, CHIPHIKHAC, CKTM, VAT)
    VALUES ('NH001', 'TB001', 2500000, 100000, 0, 10)
    INTO CHI_TIET_NHAP_TB (MANH, MATB, DONGIA, CHIPHIKHAC, CKTM, VAT)
    VALUES ('NH002', 'TB002', 1800000, 50000, 1, 10)
    INTO CHI_TIET_NHAP_TB (MANH, MATB, DONGIA, CHIPHIKHAC, CKTM, VAT)
    VALUES ('NH003', 'TB003', 700000, 0, 0, 10)
    INTO CHI_TIET_NHAP_TB (MANH, MATB, DONGIA, CHIPHIKHAC, CKTM, VAT)
    VALUES ('NH004', 'TB004', 1200000, 20000, 0, 10)
SELECT * FROM dual;

--LOAI_KHU_VUC
INSERT ALL
    INTO LOAI_KHU_VUC (MALKV, TENLOAI, GIATIEN, SOLUONGMAY)
    VALUES ('LKV001', 'VIP', 20000, 10)
    INTO LOAI_KHU_VUC (MALKV, TENLOAI, GIATIEN, SOLUONGMAY)
    VALUES ('LKV002', 'Standard', 15000, 20)
    INTO LOAI_KHU_VUC (MALKV, TENLOAI, GIATIEN, SOLUONGMAY)
    VALUES ('LKV003', 'Economy', 10000, 30)
    INTO LOAI_KHU_VUC (MALKV, TENLOAI, GIATIEN, SOLUONGMAY)
    VALUES ('LKV004', 'Streaming', 18000, 8)
SELECT * FROM dual;

--KHU_VUC
INSERT ALL
    INTO KHU_VUC (MAKV, TENKV, MALKV, SOTANG, SOLUONGMAYKV, TRANGTHAI)
    VALUES ('KV001', 'Khu A', 'LKV001', 1, 10, 'HOATDONG')
    INTO KHU_VUC (MAKV, TENKV, MALKV, SOTANG, SOLUONGMAYKV, TRANGTHAI)
    VALUES ('KV002', 'Khu B', 'LKV002', 1, 20, 'HOATDONG')
    INTO KHU_VUC (MAKV, TENKV, MALKV, SOTANG, SOLUONGMAYKV, TRANGTHAI)
    VALUES ('KV003', 'Khu C', 'LKV003', 2, 15, 'HOATDONG')
    INTO KHU_VUC (MAKV, TENKV, MALKV, SOTANG, SOLUONGMAYKV, TRANGTHAI)
    VALUES ('KV004', 'Khu D', 'LKV004', 1, 8, 'HOATDONG')
SELECT * FROM dual;

--CHUONG_TRINH_KHUYEN_MAI
INSERT ALL
    INTO CHUONG_TRINH_KHUYEN_MAI (MACTR, TENCTR, LOAICTR, NGBD, NGKT, CHIETKHAU)
    VALUES ('KM001', 'Khuyen Mai He', 'Khuyen mai san pham', TO_DATE('2025-06-01', 'YYYY-MM-DD'), TO_DATE('2025-06-30', 'YYYY-MM-DD'), 0.1)
    INTO CHUONG_TRINH_KHUYEN_MAI (MACTR, TENCTR, LOAICTR, NGBD, NGKT, CHIETKHAU)
    VALUES ('KM002', 'Khuyen Mai Tet', 'Khuyen mai nap', TO_DATE('2025-01-01', 'YYYY-MM-DD'), TO_DATE('2025-01-31', 'YYYY-MM-DD'), 0.2)
    INTO CHUONG_TRINH_KHUYEN_MAI (MACTR, TENCTR, LOAICTR, NGBD, NGKT, CHIETKHAU)
    VALUES ('KM003', 'Back to School', 'Khuyen mai khu vuc', TO_DATE('2025-08-15', 'YYYY-MM-DD'), TO_DATE('2025-09-15', 'YYYY-MM-DD'), 0.15)
    INTO CHUONG_TRINH_KHUYEN_MAI (MACTR, TENCTR, LOAICTR, NGBD, NGKT, CHIETKHAU)
    VALUES ('KM004', 'Giang sinh', 'Khuyen mai san pham', TO_DATE('2025-12-01', 'YYYY-MM-DD'), TO_DATE('2025-12-31', 'YYYY-MM-DD'), 0.25)
SELECT * FROM dual;

--KHUYEN_MAI_SAN_PHAM
INSERT ALL
    INTO KHUYEN_MAI_SAN_PHAM (MAKMSP, MACTR, MASP)
    VALUES ('KMSP001', 'KM001', 'SP001')
    INTO KHUYEN_MAI_SAN_PHAM (MAKMSP, MACTR, MASP)
    VALUES ('KMSP002', 'KM001', 'SP003')
    INTO KHUYEN_MAI_SAN_PHAM (MAKMSP, MACTR, MASP)
    VALUES ('KMSP003', 'KM004', 'SP004')
    INTO KHUYEN_MAI_SAN_PHAM (MAKMSP, MACTR, MASP)
    VALUES ('KMSP004', 'KM004', 'SP002')
SELECT * FROM dual;

--KHUYEN_MAI_KHU_VUC
INSERT ALL
    INTO KHUYEN_MAI_KHU_VUC (MAKMKV, MAKV, MACTR)
    VALUES ('KMKV001', 'KV001', 'KM003')
    INTO KHUYEN_MAI_KHU_VUC (MAKMKV, MAKV, MACTR)
    VALUES ('KMKV002', 'KV002', 'KM003')
    INTO KHUYEN_MAI_KHU_VUC (MAKMKV, MAKV, MACTR)
    VALUES ('KMKV003', 'KV003', 'KM001')
    INTO KHUYEN_MAI_KHU_VUC (MAKMKV, MAKV, MACTR)
    VALUES ('KMKV004', 'KV004', 'KM004')
SELECT * FROM dual;

--CHI_PHI
INSERT ALL
    INTO CHI_PHI (MACHIPHI, NOIDUNG, NGAYCHI, MANV, HINHTHUC, SOTIEN, TRANGTHAI)
    VALUES ('CP001', 'Mua văn phòng phẩm', TO_DATE('2025-05-01', 'YYYY-MM-DD'), 'NV001', 'Tiền mặt', 500000, 'SPENT')
    INTO CHI_PHI (MACHIPHI, NOIDUNG, NGAYCHI, MANV, HINHTHUC, SOTIEN, TRANGTHAI)
    VALUES ('CP002', 'Thanh toán tiền điện', TO_DATE('2025-05-05', 'YYYY-MM-DD'), 'NV002', 'Chuyển khoản', 1200000, 'SPENT')
    INTO CHI_PHI (MACHIPHI, NOIDUNG, NGAYCHI, MANV, HINHTHUC, SOTIEN, TRANGTHAI)
    VALUES ('CP003', 'Sửa chữa máy tính', TO_DATE('2025-05-08', 'YYYY-MM-DD'), 'NV003', 'Tiền mặt', 800000, 'SPENT')
    INTO CHI_PHI (MACHIPHI, NOIDUNG, NGAYCHI, MANV, HINHTHUC, SOTIEN, TRANGTHAI)
    VALUES ('CP004', 'Thuê nhân công', TO_DATE('2025-05-10', 'YYYY-MM-DD'), 'NV004', 'Chuyển khoản', 1000000, 'SPENT')
SELECT * FROM dual;

--HANG_KHACH_HANG
INSERT ALL
    INTO HANG_KHACH_HANG (MAHKH, TENHANG, TYLENAP)
    VALUES ('HKH001', 'Dong', 1)
    INTO HANG_KHACH_HANG (MAHKH, TENHANG, TYLENAP)
    VALUES ('HKH002', 'Bac', 1.1)
    INTO HANG_KHACH_HANG (MAHKH, TENHANG, TYLENAP)
    VALUES ('HKH003', 'Vang', 1.2)
    INTO HANG_KHACH_HANG (MAHKH, TENHANG, TYLENAP)
    VALUES ('HKH004', 'Kim cuong', 1.5)
SELECT * FROM dual;

--KHACH_HANG
INSERT ALL
    INTO KHACH_HANG (MAKH, USER_ID, MAHKH, SODUTK, SODIEMTICHLUY, TRANGTHAI)
    VALUES ('KH001', 'U006', 'HKH001', 50000, 2000, 'Online')
SELECT * FROM dual;
    
--PC
INSERT ALL
    INTO PC (MAPC, RAM, ROM, CPU, VGA, SOMAY, TRANGTHAI, MAKV)
    VALUES ('PC001', '16GB', '512GB SSD', 'i5', 'GTX 1650', 1, 'EMPTY', 'KV001')
    INTO PC (MAPC, RAM, ROM, CPU, VGA, SOMAY, TRANGTHAI, MAKV)
    VALUES ('PC002', '8GB', '256GB SSD', 'i3', 'UHD Graphics', 2, 'PLAYING', 'KV002')
    INTO PC (MAPC, RAM, ROM, CPU, VGA, SOMAY, TRANGTHAI, MAKV)
    VALUES ('PC003', '32GB', '1TB SSD', 'i7', 'RTX 3060', 3, 'PLAYING', 'KV003')
    INTO PC (MAPC, RAM, ROM, CPU, VGA, SOMAY, TRANGTHAI, MAKV)
    VALUES ('PC004', '16GB', '512GB SSD', 'Ryzen 5', 'RX 580', 4, 'FIXING', 'KV004')
SELECT * FROM dual;

--LICH_SU_CHOI
INSERT ALL
    INTO LICH_SU_CHOI (MALS, MAKH, NGAYBD, NGAYKT, TONGTHOIGIAN, LOAITHUE, TRANGTHAI)
    VALUES ('LS001', 'KH001', TO_DATE('2025-05-16 08:00', 'YYYY-MM-DD HH24:MI'), TO_DATE('2025-06-20 09:00', 'YYYY-MM-DD HH24:MI'), 60, 'Thue may', 'OFFLINE')
SELECT * FROM dual;

--THUE_MAY
INSERT ALL
    INTO THUE_MAY (MATM, MAPC, MALS)
    VALUES ('TM001', 'PC001', 'LS001')

SELECT * FROM dual;

--GIAO_DICH
INSERT ALL
    INTO GIAO_DICH (MAGD, MAKH, HINHTHUC, SOTIEN, TRANGTHAI)
    VALUES ('GD001', 'KH001', 'Tien mat', 50000, 'SUCCESS')
SELECT * FROM dual;

--PHIEU_THANH_TOAN
INSERT ALL
    INTO PHIEU_THANH_TOAN (MAPHIEU, TONGSODV, TRANGTHAI, TONGTIEN)
    VALUES ('PTT001', 2, 'PURCHASED', 60000)
    INTO PHIEU_THANH_TOAN (MAPHIEU, TONGSODV, TRANGTHAI, TONGTIEN)
    VALUES ('PTT002', 3, 'PURCHASED', 120000)
    INTO PHIEU_THANH_TOAN (MAPHIEU, TONGSODV, TRANGTHAI, TONGTIEN)
    VALUES ('PTT003', 1, 'PURCHASED', 30000)
    INTO PHIEU_THANH_TOAN (MAPHIEU, TONGSODV, TRANGTHAI, TONGTIEN)
    VALUES ('PTT004', 4, 'PURCHASED', 150000)
SELECT * FROM dual;

--DICH_VU_DA_DUNG
INSERT ALL
    INTO DICH_VU_DA_DUNG (MADVSD, MALS, MASP, SL, TRANGTHAI)
    VALUES ('DVSD001', 'LS001', 'SP001', 2, 'SERVICED')
SELECT * FROM dual;

--THIET_BI_TUNG_MAY
INSERT ALL
    INTO THIET_BI_TUNG_MAY (MAPC, MATB)
    VALUES ('PC001', 'TB001')
    INTO THIET_BI_TUNG_MAY (MAPC, MATB)
    VALUES ('PC002', 'TB002')
    INTO THIET_BI_TUNG_MAY (MAPC, MATB)
    VALUES ('PC003', 'TB003')
    INTO THIET_BI_TUNG_MAY (MAPC, MATB)
    VALUES ('PC004', 'TB004')
SELECT * FROM dual;

--THAY_THE_THIET_BI
INSERT ALL
    INTO THAY_THE_THIET_BI (MATTTB, MATB, MATBTHAYTHE, MANV, TRANGTHAI)
    VALUES ('TTTB001', 'TB001', 'TB003', 'NV001', 'REPLACED')
    INTO THAY_THE_THIET_BI (MATTTB, MATB, MATBTHAYTHE, MANV, TRANGTHAI)
    VALUES ('TTTB002', 'TB002', 'TB004', 'NV002', 'REPLACED')
    INTO THAY_THE_THIET_BI (MATTTB, MATB, MATBTHAYTHE, MANV, TRANGTHAI)
    VALUES ('TTTB003', 'TB003', 'TB001', 'NV003', 'WAITING')
    INTO THAY_THE_THIET_BI (MATTTB, MATB, MATBTHAYTHE, MANV, TRANGTHAI)
    VALUES ('TTTB004', 'TB004', 'TB002', 'NV004', 'REPLACED')
SELECT * FROM dual;

--QUA_TANG
INSERT ALL
    INTO QUA_TANG (MAQT, NOIDUNG, SODIEMTIEUHAO)
    VALUES ('QT001', 'Binh nuoc', 50)
    INTO QUA_TANG (MAQT, NOIDUNG, SODIEMTIEUHAO)
    VALUES ('QT002', 'Voucher 100k', 100)
    INTO QUA_TANG (MAQT, NOIDUNG, SODIEMTIEUHAO)
    VALUES ('QT003', 'Ao thun', 70)
    INTO QUA_TANG (MAQT, NOIDUNG, SODIEMTIEUHAO)
    VALUES ('QT004', 'USB 16GB', 60)
SELECT * FROM dual;

--LICH_SU_DOI_QUA
INSERT ALL
    INTO LICH_SU_DOI_QUA (MADQ, MAKH, MAQT, SL)
    VALUES ('DQ001', 'KH001', 'QT001', 1)
SELECT * FROM dual;

--SU_KIEN
INSERT ALL
    INTO SU_KIEN (MASK, TENSK, TGBD, TGKT, MAKV, NOIDUNG, MANV)
    VALUES ('SK001', 'Giai dau LOL', TO_DATE('2025-06-01', 'YYYY-MM-DD'), TO_DATE('2025-06-02', 'YYYY-MM-DD'), 'KV001', 'Thi dau lien minh', 'NV001')
    INTO SU_KIEN (MASK, TENSK, TGBD, TGKT, MAKV, NOIDUNG, MANV)
    VALUES ('SK002', 'Offline Gamer', TO_DATE('2025-07-05', 'YYYY-MM-DD'), TO_DATE('2025-07-05', 'YYYY-MM-DD'), 'KV002', 'Giao luu khach hang', 'NV002')
    INTO SU_KIEN (MASK, TENSK, TGBD, TGKT, MAKV, NOIDUNG, MANV)
    VALUES ('SK003', 'Ra mat PC moi', TO_DATE('2025-08-10', 'YYYY-MM-DD'), TO_DATE('2025-08-10', 'YYYY-MM-DD'), 'KV003', 'Gioi thieu thiet bi', 'NV003')
    INTO SU_KIEN (MASK, TENSK, TGBD, TGKT, MAKV, NOIDUNG, MANV)
    VALUES ('SK004', 'Khuyen mai cuoi nam', TO_DATE('2025-12-20', 'YYYY-MM-DD'), TO_DATE('2025-12-31', 'YYYY-MM-DD'), 'KV004', 'Tang diem tich luy', 'NV004')
SELECT * FROM dual;

--DOANH_THU
INSERT ALL
    INTO DOANH_THU (MADT, NOIDUNG, TONGDOANHTHU)
    VALUES ('DT001', 'Thang 5/2025', 10000000)
    INTO DOANH_THU (MADT, NOIDUNG, TONGDOANHTHU)
    VALUES ('DT002', 'Thang 4/2025', 8500000)
    INTO DOANH_THU (MADT, NOIDUNG, TONGDOANHTHU)
    VALUES ('DT003', 'Thang 3/2025', 9200000)
    INTO DOANH_THU (MADT, NOIDUNG, TONGDOANHTHU)
    VALUES ('DT004', 'Thang 2/2025', 7800000)
SELECT * FROM dual;

-- Tạo doanh thu mẫu
-- Tạo doanh thu theo ngày
BEGIN
  FOR i IN 1..31 LOOP
    INSERT INTO DOANH_THU (
      MADT,
      NOIDUNG,
      TONGDOANHTHU,
      TONGDOANHTHUDV,
      TONGSODV,
      TONGTHOIGIANCHOI,
      CREATED_AT,
      IS_DELETE,
      LOAIDT
    ) VALUES (
      'DT' || TO_CHAR(DATE '2025-05-01' + (i - 1), 'YYYYMMDD'),       -- MADT
      'Tổng kết ngày ' || TO_CHAR(DATE '2025-05-01' + (i - 1), 'DD/MM/YYYY'), -- NOIDUNG
      TRUNC(DBMS_RANDOM.VALUE(1000000, 5000000)), -- TONGDOANHTHU
      TRUNC(DBMS_RANDOM.VALUE(500000, 2000000)),  -- TONGDOANHTHUDV
      TRUNC(DBMS_RANDOM.VALUE(50, 200)),          -- TONGSODV
      TRUNC(DBMS_RANDOM.VALUE(3000, 10000)),      -- TONGTHOIGIANCHOI (phút)
      DATE '2025-05-01' + (i - 1),                -- CREATE_AT
      0,                                          -- IS_DELETE
      'DAILY'                              -- LOAIDT
    );
  END LOOP;

  COMMIT;
END;
/

-- Tạo doanh thu theo tháng
BEGIN
  FOR i IN 0..(MONTHS_BETWEEN(TRUNC(SYSDATE), DATE '2024-01-01')) LOOP
    INSERT INTO DOANH_THU (
      MADT,
      NOIDUNG,
      TONGDOANHTHU,
      TONGDOANHTHUDV,
      TONGSODV,
      TONGTHOIGIANCHOI,
      CREATED_AT,
      IS_DELETE,
      LOAIDT
    ) VALUES (
      'DT' || TO_CHAR(ADD_MONTHS(DATE '2024-01-01', i), 'YYYYMM'),
      'Tổng kết tháng ' || TO_CHAR(ADD_MONTHS(DATE '2024-01-01', i), 'MM/YYYY'),
      TRUNC(DBMS_RANDOM.VALUE(30000000, 100000000)),  -- tổng doanh thu: 30-100 triệu
      TRUNC(DBMS_RANDOM.VALUE(5000000, 20000000)),    -- doanh thu dịch vụ: 5-20 triệu
      TRUNC(DBMS_RANDOM.VALUE(500, 2000)),            -- số dịch vụ: 500-2000
      TRUNC(DBMS_RANDOM.VALUE(20000, 80000)),         -- thời gian chơi: 20,000–80,000 phút
      ADD_MONTHS(DATE '2024-01-01', i),
      0,
      'MONTHLY'
    );
  END LOOP;

  COMMIT;
END;
/	

SELECT * FROM ALL_TRIGGERS at WHERE AT.OWNER = 'QUANLYTIEMCYCBERGAME';
-- Trigger, Procedure, Function:
-- Tạo khóa chính tự động

-- Tạo khóa chính cho loại khu vực
CREATE OR REPLACE TRIGGER TRG_AUTO_LOAI_KHU_VUC_ID
BEFORE INSERT ON LOAI_KHU_VUC
FOR EACH ROW
BEGIN
    :NEW.MALKV := 'LKV' || TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS');
END;
/

-- Tạo khóa chính cho chi phí
CREATE OR REPLACE TRIGGER TRG_AUTO_CHI_PHI_ID
BEFORE INSERT ON CHI_PHI
FOR EACH ROW
BEGIN
    :NEW.MACHIPHI := 'CP' || TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS');
END;
/

-- Tạo khóa chính cho khuc vực
CREATE OR REPLACE TRIGGER TRG_AUTO_KHU_VUC_ID
BEFORE INSERT ON KHU_VUC
FOR EACH ROW
BEGIN
    :NEW.MAKV := 'KV' || TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS');
END;
/

-- Tạo khóa chính cho hạng khách hàng
CREATE OR REPLACE TRIGGER TRG_AUTO_HANG_KHACH_HANG_ID
BEFORE INSERT ON HANG_KHACH_HANG
FOR EACH ROW
BEGIN
    :NEW.MAHKH := 'HKH' || TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS');
END;
/
-- Tạo khóa chính cho số ngày phép
CREATE OR REPLACE TRIGGER TRG_AUTO_SO_NGAY_PHEP_ID
BEFORE INSERT ON SO_NGAY_PHEP
FOR EACH ROW
BEGIN
    :NEW.MANP := 'SNP' || TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS');
END;
/

-- Tạo khóa chính cho sản phẩm
CREATE OR REPLACE TRIGGER TRG_AUTO_SAN_PHAM_ID
BEFORE INSERT ON SAN_PHAM
FOR EACH ROW
BEGIN
    :NEW.MASP := 'SP' || TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS');
END;
/

-- Tạo khóa chính cho nghỉ phép
CREATE OR REPLACE TRIGGER TRG_AUTO_NGHI_PHEP_ID
BEFORE INSERT ON NGHI_PHEP
FOR EACH ROW
BEGIN
    :NEW.MANP := 'NP' || TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS');
END;
/

-- Tạo khóa chính cho ca làm
CREATE OR REPLACE TRIGGER TRG_AUTO_CA_LAM_ID
BEFORE INSERT ON CA_LAM
FOR EACH ROW
BEGIN
    :NEW.MACA := 'CL' || TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS');
END;
/

-- Tạo khóa chính cho lịch sử đổi quà
CREATE OR REPLACE TRIGGER TRG_AUTO_LICH_SU_DOI_QUA_ID
BEFORE INSERT ON LICH_SU_DOI_QUA
FOR EACH ROW
BEGIN
    :NEW.MADQ := 'DQ' || TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS');
END;
/

-- Tạo khóa chính cho thay thế thiết bị
CREATE OR REPLACE TRIGGER TRG_AUTO_THAY_THE_THIET_BI_ID
BEFORE INSERT ON THAY_THE_THIET_BI
FOR EACH ROW
BEGIN
    :NEW.MATTTB := 'TTTB' || TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS');
END;
/

-- Tạo khóa chính cho PC
CREATE OR REPLACE TRIGGER TRG_AUTO_PC_ID
BEFORE INSERT ON PC
FOR EACH ROW
BEGIN
    :NEW.MAPC := 'PC' || TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS');
END;
/

-- Tạo khóa chính cho thuê máy
CREATE OR REPLACE TRIGGER TRG_AUTO_THUE_MAY_ID
BEFORE INSERT ON THUE_MAY
FOR EACH ROW
BEGIN
    :NEW.MATM := 'TM' || TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS');
END;
/

-- Tạo khóa chính cho dịch vụ đã dùng
CREATE OR REPLACE TRIGGER TRG_AUTO_DICH_VU_DA_DUNG_ID
BEFORE INSERT ON DICH_VU_DA_DUNG
FOR EACH ROW
BEGIN
    :NEW.MADVSD := 'DVSD' || TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS');
END;
/

-- Tạo khóa chính cho nhập hàng
CREATE OR REPLACE TRIGGER TRG_AUTO_NHAP_HANG_ID
BEFORE INSERT ON NHAP_HANG
FOR EACH ROW
BEGIN
    :NEW.MANH := 'NH' || TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS');
END;
/

-- Tạo khóa chính cho nhà cung cấp
CREATE OR REPLACE TRIGGER TRG_AUTO_NHA_CUNG_CAP_ID
BEFORE INSERT ON NHA_CUNG_CAP
FOR EACH ROW
BEGIN
    :NEW.MANCC := 'NCC' || TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS');
END;
/

-- Tạo khóa chính cho sự kiện
CREATE OR REPLACE TRIGGER TRG_AUTO_SU_KIEN_ID
BEFORE INSERT ON SU_KIEN
FOR EACH ROW
BEGIN
    :NEW.MASK := 'SK' || TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS');
END;
/

-- Tạo khóa chính cho khuyến mại
CREATE OR REPLACE TRIGGER TRG_AUTO_KHUYEN_MAI_ID
BEFORE INSERT ON CHUONG_TRINH_KHUYEN_MAI
FOR EACH ROW
BEGIN
    :NEW.MACTR := 'CTR' || TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS');
END;
/

-- Tạo khóa chính cho khuyến mại sản phẩm
CREATE OR REPLACE TRIGGER TRG_AUTO_KHUYEN_MAI_SAN_PHAM_ID
BEFORE INSERT ON KHUYEN_MAI_SAN_PHAM
FOR EACH ROW
BEGIN
    :NEW.MAKMSP := 'KMSP' || TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS');
END;
/

-- Tạo khóa chính cho khuyến mại khu vực
CREATE OR REPLACE TRIGGER TRG_AUTO_KHUYEN_MAI_KHU_VUC_ID
BEFORE INSERT ON KHUYEN_MAI_KHU_VUC
FOR EACH ROW
BEGIN
    :NEW.MAKMKV := 'KMKV' || TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS');
END;
/

-- Procedures
-- Tạo nhân viên mới
CREATE OR REPLACE PROCEDURE CREATE_NEW_EMPLOYEE(
    p_HOTEN IN VARCHAR2, 
    p_DIACHI IN VARCHAR2, 
    p_SDT IN VARCHAR2, 
    p_NGSINH IN DATE, 
    p_MALNV IN VARCHAR2, 
    p_EMAIL IN VARCHAR2,
    p_MATCN IN VARCHAR2,
    p_SOBHYT IN VARCHAR2,
    p_PASSWORD_HASH IN VARCHAR2
) AS
  USER_ID_CUR VARCHAR2(20);
  ACC_ID_CUR VARCHAR2(20);
BEGIN
		USER_ID_CUR  := 'US' || TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS');
		INSERT INTO USERS (USER_ID, HOTEN,SDT,CREATED_AT, EMAIL, NGAYSINH, DIACHI, IS_DELETE)
		VALUES (USER_ID_CUR,p_HOTEN,p_SDT,SYSDATE,p_EMAIL,p_NGSINH, p_DIACHI,0);
    ACC_ID_CUR := 'AC' || TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS');
    INSERT INTO ACCOUNT (ACCOUNT_ID, USER_ID, USERNAME, PASSWORD_HASH, STATUS, IS_DELETE, CREATED_AT)
    VALUES (ACC_ID_CUR, USER_ID_CUR, P_SDT, P_PASSWORD_HASH, 'ACTIVE', 0, SYSDATE);
    
    INSERT INTO NHAN_VIEN (MANV, USER_ID, NGVL, MALNV, MASOTHUECN, SOBHYT, IS_DELETE, CREATED_AT)
    VALUES ('NV' || TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'), USER_ID_CUR, SYSDATE, P_MALNV, P_MATCN, P_SOBHYT, 0, SYSDATE);
    

    IF (P_MALNV = 'LNV01') THEN INSERT INTO ACCOUNT_ROLE_GROUP ( ACCOUNT_ROLE_GROUP_ID, ACCOUNT_ID, GROUP_ID, IS_DELETE, CREATED_AT) VALUES (TO_NUMBER(SUBSTR(TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') || TRUNC(DBMS_RANDOM.VALUE(1000, 9999)), 1, 10)), ACC_ID_CUR, 'G001', 0, SYSDATE);
    ELSIF (P_MALNV = 'LNV02')THEN INSERT INTO ACCOUNT_ROLE_GROUP ( ACCOUNT_ROLE_GROUP_ID, ACCOUNT_ID, GROUP_ID, IS_DELETE, CREATED_AT) VALUES (TO_NUMBER(SUBSTR(TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') || TRUNC(DBMS_RANDOM.VALUE(1000, 9999)), 1, 10)), ACC_ID_CUR, 'G002', 0, SYSDATE);
    ELSIF (P_MALNV = 'LNV03')THEN INSERT INTO ACCOUNT_ROLE_GROUP ( ACCOUNT_ROLE_GROUP_ID, ACCOUNT_ID, GROUP_ID, IS_DELETE, CREATED_AT) VALUES (TO_NUMBER(SUBSTR(TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') || TRUNC(DBMS_RANDOM.VALUE(1000, 9999)), 1, 10)), ACC_ID_CUR, 'G003', 0, SYSDATE);
    ELSIF (P_MALNV = 'LNV04')THEN INSERT INTO ACCOUNT_ROLE_GROUP ( ACCOUNT_ROLE_GROUP_ID, ACCOUNT_ID, GROUP_ID, IS_DELETE, CREATED_AT) VALUES (TO_NUMBER(SUBSTR(TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') || TRUNC(DBMS_RANDOM.VALUE(1000, 9999)), 1, 10)), ACC_ID_CUR, 'G004', 0, SYSDATE);
    ELSIF (P_MALNV = 'LNV05')THEN INSERT INTO ACCOUNT_ROLE_GROUP ( ACCOUNT_ROLE_GROUP_ID, ACCOUNT_ID, GROUP_ID, IS_DELETE, CREATED_AT) VALUES (TO_NUMBER(SUBSTR(TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') || TRUNC(DBMS_RANDOM.VALUE(1000, 9999)), 1, 10)), ACC_ID_CUR, 'G005', 0, SYSDATE);
    END IF;
END CREATE_NEW_EMPLOYEE;


-- Đổi quà
CREATE OR REPLACE PROCEDURE EXCHANGE_GIFT(
    p_MADQ IN VARCHAR2
) AS
    v_MAKH VARCHAR2(20);
    v_MAQT VARCHAR2(20);
    v_SL INT;
    v_SoDiemHienTai INT;
    v_DiemTieuHao INT;
BEGIN
    SELECT LSDQ.MAKH,LSDQ.MAQT,LSDQ.SL INTO V_MAKH,V_MAQT,V_SL FROM LICH_SU_DOI_QUA lsdq
    WHERE LSDQ.MADQ = P_MADQ; 

    SELECT SODIEMTICHLUY INTO v_SoDiemHienTai
    FROM KHACH_HANG
    WHERE MAKH = V_MAKH;

    SELECT SODIEMTIEUHAO INTO v_DiemTieuHao
    FROM QUA_TANG
    WHERE MAQT = V_MAQT;

    IF v_SoDiemHienTai >= (v_DiemTieuHao * V_SL) THEN
        UPDATE KHACH_HANG
        SET SODIEMTICHLUY = SODIEMTICHLUY - (v_DiemTieuHao * V_SL)
        WHERE MAKH = V_MAKH;

        UPDATE LICH_SU_DOI_QUA
        SET TRANGTHAI = 'Completed'
        WHERE MADQ = P_MADQ;

        COMMIT;
    ELSE
        RAISE_APPLICATION_ERROR(-20001,'Khách không đủ điểm');
    END IF;
EXCEPTION
    WHEN OTHERS THEN
       IF SQLCODE != -20001 THEN
        ROLLBACK;
        RAISE_APPLICATION_ERROR(-20002,'Lỗi khi đổi quà: ' || SQLERRM);
       ELSE
        RAISE;
       END IF;
END EXCHANGE_GIFT;
/

-- Tính tiền thuê máy
CREATE OR REPLACE FUNCTION CALCULATE_PLAYERTIME_CHARGE (p_MALS VARCHAR2) RETURN NUMBER IS
    v_TIENTHUEMAY NUMBER(10);
    v_MINUTES NUMBER;
    v_start_date DATE;
    v_end_date   DATE;
BEGIN
    -- Tính tổng tiền thuê máy
    SELECT SUM(lkv.GIATIEN - NVL(ctkm.CHIETKHAU * lkv.GIATIEN, 0))
    INTO v_TIENTHUEMAY
    FROM THUE_MAY tm
    JOIN PC pc ON tm.MAPC = pc.MAPC
    JOIN LICH_SU_CHOI ls ON ls.MALS = tm.MALS
    JOIN KHU_VUC kv ON pc.MAKV = kv.MAKV
    JOIN LOAI_KHU_VUC lkv ON lkv.MALKV = kv.MALKV
    LEFT JOIN KHUYEN_MAI_KHU_VUC kmkv ON kmkv.MAKV = kv.MAKV
    LEFT JOIN CHUONG_TRINH_KHUYEN_MAI ctkm ON ctkm.MACTR = kmkv.MACTR 
        AND ls.NGAYKT BETWEEN ctkm.NGBD AND ctkm.NGKT
    WHERE ls.MALS = p_MALS;
    SELECT LSC.NGAYBD INTO V_START_DATE FROM LICH_SU_CHOI lsc WHERE LSC.MALS = P_MALS;
    
    SELECT LSC.NGAYKT INTO V_END_DATE FROM LICH_SU_CHOI lsc WHERE LSC.MALS = P_MALS;
    v_minutes := ROUND((v_end_date - v_start_date) * 24 * 60);
    v_TIENTHUEMAY := ROUND(v_TIENTHUEMAY/60 * V_MINUTES);

    RETURN NVL(v_TIENTHUEMAY, 0); -- Trả về 0 nếu không có kết quả
END CALCULATE_PLAYERTIME_CHARGE;
/

-- Tính tiền dịch vụ
CREATE OR REPLACE FUNCTION CALCULATE_SERVICE_CHARGE(p_MALS VARCHAR2) RETURN NUMBER IS
    v_TIENDICHVU NUMBER(10);
BEGIN
    -- Tính tổng tiền dịch vụ
    SELECT SUM(sp.DONGIABQ * dvdd.SL - NVL(sp.DONGIABQ * dvdd.SL * ctkm.CHIETKHAU, 0))
    INTO v_TIENDICHVU
    FROM DICH_VU_DA_DUNG dvdd 
    JOIN LICH_SU_CHOI ls ON ls.MALS = dvdd.MALS
    JOIN SAN_PHAM sp ON dvdd.MASP = sp.MASP
    LEFT JOIN KHUYEN_MAI_SAN_PHAM kmsp ON kmsp.MASP = sp.MASP
    LEFT JOIN CHUONG_TRINH_KHUYEN_MAI ctkm ON ctkm.MACTR = kmsp.MACTR 
        AND ls.NGAYKT BETWEEN ctkm.NGBD AND ctkm.NGKT
    WHERE ls.MALS = p_MALS;

    RETURN NVL(v_TIENDICHVU, 0); -- tránh NULL khi không có dịch vụ nào
END CALCULATE_SERVICE_CHARGE;
/

-- Nạp tiền
CREATE OR REPLACE PROCEDURE DEPOSIT(
	p_MAKH IN VARCHAR2,
	p_SOTIEN IN INT,
	p_HINHTHUC IN VARCHAR2,
	p_TRANGTHAI IN VARCHAR2
) AS
		v_tongchietkhau DECIMAL;
BEGIN
    SELECT NVL(SUM(ctkm.CHIETKHAU),1) INTO v_tongchietkhau
    FROM CHUONG_TRINH_KHUYEN_MAI ctkm
    WHERE ctkm.NGBD >= SYSDATE AND ctkm.NGKT <= SYSDATE
		AND LOAICTR = 'Khuyến mãi nạp';
		
    UPDATE KHACH_HANG
    SET SODIEMTICHLUY = SODIEMTICHLUY + (p_SOTIEN*v_tongchietkhau/1000)
    WHERE MAKH = p_MAKH;
		
		UPDATE KHACH_HANG
		SET SODUTK = SODUTK + (p_SOTIEN*v_tongchietkhau);
		
    INSERT INTO GIAO_DICH (MAGD, MAKH, HINHTHUC, SOTIEN, TRANGTHAI)
    VALUES ('GD' || TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'), p_MAKH, p_HINHTHUC,p_SOTIEN,p_TRANGTHAI);

    COMMIT;
EXCEPTION
    WHEN OTHERS THEN
        ROLLBACK;
        RAISE_APPLICATION_ERROR(-20001, SQLERRM);
END DEPOSIT;
/

-- Tạo khách hàng mới
CREATE OR REPLACE PROCEDURE CREATE_NEW_CUSTOMER(
    p_HOTEN IN VARCHAR2, 
    p_DIACHI IN VARCHAR2, 
    p_SDT IN VARCHAR2, 
    p_NGSINH IN DATE, 
    p_MAHKH IN VARCHAR2, 
    p_EMAIL IN VARCHAR2,
    p_PASSWORD_HASH IN VARCHAR2
) AS
  USER_ID_CUR VARCHAR2(20);
  ACC_ID_CUR VARCHAR2(20);
BEGIN
		USER_ID_CUR  := 'US' || TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS');
		INSERT INTO USERS (USER_ID, HOTEN,SDT,CREATED_AT, EMAIL, NGAYSINH, DIACHI, IS_DELETE, QUYENHANG)
		VALUES (USER_ID_CUR,p_HOTEN,p_SDT,SYSDATE,p_EMAIL,p_NGSINH, p_DIACHI,0,'Customer');
    
    ACC_ID_CUR  := 'ACC' || TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS');
    
    INSERT INTO ACCOUNT (ACCOUNT_ID, USER_ID, USERNAME, PASSWORD_HASH, STATUS, IS_DELETE, CREATED_AT)
    VALUES (ACC_ID_CUR, USER_ID_CUR, P_SDT, P_PASSWORD_HASH, 'ACTIVE', 0, SYSDATE);

    INSERT INTO KHACH_HANG (MAKH, USER_ID, MAHKH,  SODIEMTICHLUY, SODUTK, TRANGTHAI, IS_DELETE, NGAYDKTK)
    VALUES ('KH' || TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'), USER_ID_CUR , p_MAHKH, 0,0, 'Online',0 , SYSDATE);
    
    INSERT INTO ACCOUNT_ROLE_GROUP ( ACCOUNT_ROLE_GROUP_ID, ACCOUNT_ID, GROUP_ID, IS_DELETE, CREATED_AT) VALUES (TO_NUMBER(SUBSTR(TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') || TRUNC(DBMS_RANDOM.VALUE(1000, 9999)), 1, 10)), ACC_ID_CUR, 'G006', 0, SYSDATE);
END CREATE_NEW_CUSTOMER;
/

-- Tạo phiếu thanh toán mới
CREATE OR REPLACE PROCEDURE Create_phieu_tinh_tien(
		p_MAKH IN VARCHAR2,
		p_MALS IN VARCHAR2
)
AS
		v_TONGSODV INT;
		v_TONGTIEN NUMBER(10);
		v_TONGTIENDV NUMBER(10);
		v_TONGTHOIGIANCHOI INT;
BEGIN
		-- Đếm số dịch vụ đã sử dụng
		SELECT COUNT(*) INTO v_TONGSODV
		FROM DICH_VU_DA_DUNG
		WHERE MALS = p_MALS;
		-- Tính thời gian chơi		
		SELECT ROUND((LSC.NGAYKT - LSC.NGAYBD) * 24 * 60) INTO V_TONGTHOIGIANCHOI
    FROM LICH_SU_CHOI lsc
    WHERE P_MALS = LSC.MALS;
    
    -- Tính tiền dịch vụ
    V_TONGTIENDV := CALCULATE_SERVICE_CHARGE(p_MALS);
		-- Tính tổng tiền
		v_TONGTIEN := V_TONGTIENDV + CALCULATE_PLAYERTIME_CHARGE(p_MALS);
		
		-- Tạo phiếu thanh toán mới
		INSERT INTO PHIEU_THANH_TOAN (MAPHIEU,MAKH,TONGSODV,TRANGTHAI,MALS,TONGTIEN,IS_DELETE,CREATED_AT, TONGTIENDV, TONGTHOIGIANCHOI)
		VALUES ('PTT' || TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'),p_MAKH,v_TONGSODV,'Đã thanh toán',P_MALS,V_TONGTIEN,0,SYSDATE,V_TONGTIENDV,V_TONGTHOIGIANCHOI);
		
		COMMIT;
END Create_phieu_tinh_tien;
/

-- Tạo lượt chơi mới 
CREATE OR REPLACE PROCEDURE CREATE_NEW_PLAYERTIME (
	p_MAKH IN VARCHAR2,
  p_MAPC IN VARCHAR2
)
AS
  v_MALS VARCHAR2(20);
BEGIN
		-- Cập nhật trạng thái khách hàng
		UPDATE KHACH_HANG
		SET TRANGTHAI = 'Online'
		WHERE MAKH = p_MAKH;
    -- Tạo mã lịch sử chơi
		V_MALS := 'LS' || TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS');
		-- Tạo lịch sử chơi mới
		INSERT INTO LICH_SU_CHOI (MALS,MAKH,NGAYBD,NGAYKT,IS_DELETE,CREATED_AT,TRANGTHAI)
		VALUES (V_MALS,p_MAKH,SYSDATE,SYSDATE,0,SYSDATE,'Online');
		COMMIT;

		INSERT INTO THUE_MAY (MATM, MAPC, MALS, IS_DELETE, CREATED_AT)
    VALUES ('', P_MAPC, V_MALS, 0, SYSDATE);
    
END CREATE_NEW_PLAYERTIME;
/

-- Kết thúc lượt chơi
CREATE OR REPLACE PROCEDURE FINISH_PLAYERTIME (
		p_MALS IN VARCHAR2
)
AS
    v_MAKH VARCHAR2(20);
		v_NGAYBD DATE;
		v_NGAYKT DATE;
		v_TONGTHOIGIAN INT;
		v_MAPC VARCHAR2(20);
BEGIN
    SELECT MAKH INTO V_MAKH FROM LICH_SU_CHOI lsc
    WHERE LSC.MALS = P_MALS;
		-- Cập nhật trạng thái khách hàng
		UPDATE KHACH_HANG
		SET TRANGTHAI = 'Offline'
		WHERE MAKH = V_MAKH;
		
		-- Lấy ngày bắt đầu để tính tổng thời gian
		SELECT NGAYBD INTO v_NGAYBD
		FROM LICH_SU_CHOI
		WHERE MALS = p_MALS;
		
		v_NGAYKT := SYSDATE;
		v_TONGTHOIGIAN := TO_DATE(v_NGAYKT,'YYYY-MM-DD HH24:MI:SS') - TO_DATE(v_NGAYBD, 'YYYY-MM-DD HH24:MI:SS');
		
		-- Cập nhật lại lịch sử chơi 
		UPDATE LICH_SU_CHOI
		SET NGAYKT = v_NGAYKT
		WHERE MALS = p_MALS;
		
		UPDATE PHIEU_THANH_TOAN
		SET TONGTHOIGIANCHOI = v_TONGTHOIGIAN
		WHERE MALS = p_MALS;
		
		UPDATE LICH_SU_CHOI
		SET TRANGTHAI = 'Offline'
		WHERE MALS = p_MALS;
		
		SELECT MAPC INTO v_MAPC
		FROM THUE_MAY
		WHERE MALS = p_MALS;

		SELECT MAPC INTO V_MAPC FROM THUE_MAY WHERE MALS = p_MALS;
    UPDATE PC
    SET TRANGTHAI = 'Còn trống'
    WHERE MAPC = V_MAPC;
    
		-- Tạo phiếu tính tiền 
		Create_phieu_tinh_tien(V_MAKH,p_MALS);
		COMMIT;
END FINISH_PLAYERTIME;
/

-- Sử dụng dịch vụ
CREATE OR REPLACE PROCEDURE USE_SERVICE (
    p_MALS IN VARCHAR2,
    p_MASP IN VARCHAR2,
    p_SL IN INT
)
AS
    v_MAKH VARCHAR2(20);
    v_SODIEMTICHLUY INT;
    v_DONGIABQ NUMBER(10);
BEGIN
    -- Update product quantity
    UPDATE SAN_PHAM
    SET SOLUONGTK = SOLUONGTK - p_SL
    WHERE MASP = p_MASP;

    -- Get customer information
    BEGIN
        SELECT MAKH INTO v_MAKH
        FROM LICH_SU_CHOI
        WHERE MALS = p_MALS;
    EXCEPTION
        WHEN NO_DATA_FOUND THEN
            RAISE_APPLICATION_ERROR(-20002, 'No customer found for the given service ID.');
    END;

    -- Get loyalty points and price
    BEGIN
        SELECT SODIEMTICHLUY, DONGIABQ INTO v_SODIEMTICHLUY, v_DONGIABQ
        FROM SAN_PHAM
        WHERE MASP = p_MASP;
    EXCEPTION
        WHEN NO_DATA_FOUND THEN
            RAISE_APPLICATION_ERROR(-20003, 'No product found for the given product ID.');
    END;

    -- Update customer loyalty points
    UPDATE KHACH_HANG
    SET SODIEMTICHLUY = SODIEMTICHLUY + v_SODIEMTICHLUY
    WHERE MAKH = v_MAKH;
END USE_SERVICE;
/

-- Xử lý thanh toán
CREATE OR REPLACE PROCEDURE XU_LY_THANH_TOAN_TU_DONG IS
  CURSOR CS IS 
    SELECT LSC.MALS,LSC.MAKH FROM LICH_SU_CHOI lsc WHERE LSC.TRANGTHAI = 'Online';
  v_makh KHACH_HANG.MAKH%TYPE;
  v_mals LICH_SU_CHOI.MALS%TYPE;
  v_mapc PC.MAPC%TYPE;
  v_gia LOAI_KHU_VUC.GIATIEN%TYPE := 0;
  v_makv KHU_VUC.MAKV%TYPE;
  v_chietkhau CHUONG_TRINH_KHUYEN_MAI.CHIETKHAU%TYPE := 1;
  v_sodutk KHACH_HANG.SODUTK%TYPE;
BEGIN
    OPEN CS;
    LOOP
      FETCH CS INTO V_MALS,V_MAKH;
      EXIT WHEN CS%NOTFOUND;
      
      -- Lấy mã máy của người chơi
      SELECT TM.MAPC INTO V_MAPC FROM THUE_MAY tm WHERE TM.MALS = V_MALS;
      
      -- Lấy giá tiền của máy đó
      SELECT LKV.GIATIEN INTO V_GIA FROM PC JOIN KHU_VUC kv ON PC.MAKV = kv.MAKV
      JOIN LOAI_KHU_VUC lkv ON KV.MALKV = lkv.MALKV
      WHERE MAPC = V_MAPC;
      
      -- Lấy mã khu vực
      SELECT MAKV INTO V_MAKV FROM PC
      WHERE MAPC = V_MAPC;
      
      -- Lấy chiết khấu (nếu có) của máy đó
      BEGIN
        SELECT CTKM.CHIETKHAU INTO V_CHIETKHAU FROM KHU_VUC kv JOIN KHUYEN_MAI_KHU_VUC kmkv ON KV.MAKV = kmkv.MAKV
        JOIN CHUONG_TRINH_KHUYEN_MAI ctkm ON KMKV.MACTR = ctkm.MACTR
        WHERE KMKV.MAKV = V_MAKV AND CTKM.NGBD <= SYSDATE AND CTKM.NGKT >= SYSDATE;
      EXCEPTION 
        WHEN NO_DATA_FOUND THEN 
          V_CHIETKHAU := 1;
      END;
      
      -- Đặt lại giá tiền sau khi chiết khấu 
      -- (vì tiền là mỗi giờ chơi nên cần chia 60 để tính tiền mỗi phút
      -- vì procedure này chạy mỗi phút 1 lần)
      V_GIA := V_GIA*V_CHIETKHAU/60;
      
      -- Lấy số dư người dùng
      SELECT KH.SODUTK INTO V_SODUTK FROM KHACH_HANG kh WHERE KH.MAKH = V_MAKH;      
      
      -- Kiểm tra số dư và cập nhật tài khoản người dùng
      IF V_SODUTK - V_GIA < 0 THEN 
        UPDATE KHACH_HANG
        SET SODUTK = 0
        WHERE MAKH = V_MAKH;
        Finish_playertime(V_MALS);
      ELSE 
        UPDATE KHACH_HANG
        SET SODUTK = SODUTK - V_GIA
        WHERE MAKH = V_MAKH;
      END IF;

    END LOOP;
    COMMIT;
    CLOSE CS;
END XU_LY_THANH_TOAN_TU_DONG;
/
-- Tạo mới DBMS_SCHEDULER
BEGIN
  DBMS_SCHEDULER.CREATE_JOB (
    job_name        => 'JOB_XU_LY_THANH_TOAN',
    job_type        => 'STORED_PROCEDURE',
    job_action      => 'XU_LY_THANH_TOAN_TU_DONG',
    start_date      => SYSTIMESTAMP,
    repeat_interval => 'FREQ=MINUTELY; INTERVAL=1',  -- Chạy mỗi 1 phút
    enabled         => TRUE
  );
END;
/
-- Kích hoạt DBMS_SCHEDULER
BEGIN
  DBMS_SCHEDULER.DISABLE('JOB_XU_LY_THANH_TOAN');
END;
/
-- Hủy kích hoạt DBMS_SCHEDULER
BEGIN 
  DBMS_SCHEDULER.ENABLE('JOB_XU_LY_THANH_TOAN');
END;
/

-- Thay thế thiết bị
CREATE OR REPLACE PROCEDURE CHANGE_DEVICE(
  P_MATTTB IN VARCHAR2,
  P_MANV   IN VARCHAR2,
  P_MATBTT IN VARCHAR2
)
AS
  v_MAPC VARCHAR2(20);
  v_MATB VARCHAR2(20);
  v_ID   VARCHAR2(50);
BEGIN
   --Lấy thiết bị bị hỏng
  BEGIN
    SELECT MATB INTO v_MATB 
    FROM THAY_THE_THIET_BI 
    WHERE MATTTB = P_MATTTB;
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
      RAISE_APPLICATION_ERROR(-20001, 'Không tìm thấy thiết bị cần thay thế.');
  END;

   --Tìm máy đang dùng thiết bị đó
  BEGIN
    SELECT MAPC INTO v_MAPC 
    FROM THIET_BI_TUNG_MAY 
    WHERE MATB = v_MATB;
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
      RAISE_APPLICATION_ERROR(-20002, 'Không tìm thấy máy đang sử dụng thiết bị này.');
  END;

  -- Xoá thiết bị cũ khỏi máy
  UPDATE THIET_BI_TUNG_MAY
  SET IS_DELETE = 1
  WHERE MATB = V_MATB;

   --Thêm thiết bị mới vào máy
  INSERT INTO THIET_BI_TUNG_MAY 
  VALUES (v_MAPC, P_MATBTT, 0, SYSDATE);

   --Cập nhật trạng thái thiết bị cũ thành 'Hỏng'
  UPDATE THIET_BI
  SET TRANGTHAI = 'Hong'
  WHERE MATB = v_MATB;

   --Tạo ID thay thế mới
  v_ID := 'TTTB_' || TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS');

   --Ghi lại lịch sử thay thế
   --Cập nhật thông tin thay thế
  UPDATE THAY_THE_THIET_BI
  SET
    MATB = v_MATB,
    IS_DELETE = 0,
    CREATED_AT = SYSDATE,ROLLBACK;
        RAISE_APPLICATION_ERROR(-20001, SQLERRM);
    TRANGTHAI = 'Hoan thanh',
    MATBTHAYTHE = P_MATBTT,
    MANV = P_MANV
  WHERE MATTTB = P_MATTTB;
  EXCEPTION
    WHEN OTHERS THEN
        ROLLBACK;
        RAISE_APPLICATION_ERROR(-20001, SQLERRM);
END;
/

-- Tính doanh thu theo ngày
CREATE OR REPLACE PROCEDURE CALCULATE_DAILY_REVENUE (
		p_NOIDUNG IN VARCHAR2
)
AS
		v_TONGDOANHTHU NUMBER(10);
    v_TONGSODV INT;
    v_TONGTHOIGIANCHOI INT;
    v_TONGTIENDV NUMBER(10);
BEGIN
    -- Tính tổng doanh thu
		SELECT 
      SUM(ptt.TONGTIEN),
      SUM(ptt.TONGSODV),
      SUM(PTT.TONGTHOIGIANCHOI),
      SUM(PTT.TONGTIENDV)
    INTO 
      v_TONGDOANHTHU,
      v_TONGSODV,
      V_TONGTHOIGIANCHOI,
      V_TONGTIENDV
    FROM PHIEU_THANH_TOAN ptt
		WHERE TO_CHAR(ptt.CREATED_AT, 'DDMMYYYY') = TO_CHAR(SYSDATE, 'DDMMYYYY');
		
    

		INSERT INTO DOANH_THU (MADT,NOIDUNG,TONGDOANHTHU,CREATED_AT,IS_DELETE, TONGDOANHTHUDV, TONGTHOIGIANCHOI, TONGSODV, LOAIDT)
		VALUES ('DT' || TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'),p_NOIDUNG,v_TONGDOANHTHU,SYSDATE,0, V_TONGTIENDV,V_TONGTHOIGIANCHOI,V_TONGSODV, 'DAILY');
END CALCULATE_DAILY_REVENUE;

-- Tính doanh thu theo tháng
CREATE OR REPLACE PROCEDURE CALCULATE_MONTHLY_REVENUE (
		p_NOIDUNG IN VARCHAR2
)
AS
		v_TONGDOANHTHU NUMBER(10);
    v_TONGSODV INT;
    v_TONGTHOIGIANCHOI INT;
    v_TONGTIENDV NUMBER(10);
BEGIN
    -- Tính tổng doanh thu
		SELECT 
      SUM(ptt.TONGTIEN),
      SUM(ptt.TONGSODV),
      SUM(PTT.TONGTHOIGIANCHOI),
      SUM(PTT.TONGTIENDV)
    INTO 
      v_TONGDOANHTHU,
      v_TONGSODV,
      V_TONGTHOIGIANCHOI,
      V_TONGTIENDV
    FROM PHIEU_THANH_TOAN ptt
		WHERE TO_CHAR(ptt.CREATED_AT, 'MMYYYY') = TO_CHAR(SYSDATE, 'MMYYYY');
		
    

		INSERT INTO DOANH_THU (MADT,NOIDUNG,TONGDOANHTHU,CREATED_AT,IS_DELETE, TONGDOANHTHUDV, TONGTHOIGIANCHOI, TONGSODV, LOAIDT)
		VALUES ('DT' || TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'),p_NOIDUNG,v_TONGDOANHTHU,SYSDATE,0, V_TONGTIENDV,V_TONGTHOIGIANCHOI,V_TONGSODV, 'MONTHLY');
END CALCULATE_MONTHLY_REVENUE;

-- Thanh toán thành công
CREATE OR REPLACE PROCEDURE COMPLETE_TRANSACTION(
  p_MAGD IN VARCHAR2
)
AS
BEGIN
  UPDATE GIAO_DICH
  SET TRANGTHAI = 'Da thanh toan'
  WHERE MAGD = P_MAGD;
END COMPLETE_TRANSACTION;
/

-- Tạo thiết bị mới
CREATE OR REPLACE PROCEDURE ADD_NEW_DEVICE_DETAIL(
  p_MANH IN VARCHAR2,
  p_TENTB IN VARCHAR2,
  p_LOAITB IN VARCHAR2,
  p_DONGIA IN NUMBER,
  p_CHIPHIKHAC IN NUMBER,
  P_CKTM IN NUMBER,
  P_VAT IN NUMBER
) AS
  DEVICE_IS_CUR VARCHAR2(20);
BEGIN
  DEVICE_IS_CUR := 'TB' || TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS');

  INSERT INTO THIET_BI (MATB, TENTB, LOAITB, TRANGTHAI, IS_DELETE, CREATED_AT)
  VALUES (DEVICE_IS_CUR, P_TENTB, P_LOAITB, 'HOATDONG', 0, SYSDATE);

  INSERT INTO CHI_TIET_NHAP_TB (MANH, MATB, DONGIA, CHIPHIKHAC, CKTM, VAT, IS_DELETE, CREATED_AT)
  VALUES (P_MANH, DEVICE_IS_CUR, P_DONGIA, P_CHIPHIKHAC, P_CKTM, P_VAT, 0, SYSDATE);
  
END ADD_NEW_DEVICE_DETAIL;
/

-- Kết thúc ca làm
CREATE OR REPLACE PROCEDURE FINISH_WORK_HOUR( 
  p_MANV IN VARCHAR2
)
AS
  v_now DATE := SYSDATE;
  v_end_time DATE;
  v_maca VARCHAR2(20);
BEGIN
  -- Lấy ca làm đang hoạt động
  SELECT maca, TGKT 
  INTO v_maca, v_end_time
  FROM ca_lam
  WHERE manv = p_MANV AND trangthai = 'Working';

  -- Nếu thời gian hiện tại đã vượt quá thời gian kết thúc
  IF v_now > v_end_time THEN
    UPDATE ca_lam
    SET THOIGIANTANGCA = (v_end_time - v_now) * 24
    WHERE maca = v_maca;
  END IF;
  -- Cập nhật ngày chấm công và trạng thái
  UPDATE ca_lam
  SET ngaycc = v_now,
      trangthai = 'Finish'
  WHERE maca = v_maca;

END FINISH_WORK_HOUR;
/
